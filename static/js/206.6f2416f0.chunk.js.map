{"version":3,"file":"static/js/206.6f2416f0.chunk.js","mappings":"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","sources":["components/apps/mail/search-form/style.tsx","components/apps/mail/search-form/index.tsx","components/apps/mail/group-item/style.tsx","components/apps/mail/group-item/index.tsx","containers/apps/mail/group/style.tsx","containers/apps/mail/group/index.tsx","components/apps/mail/sender/index.tsx","components/apps/mail/toolbar-icons/style.tsx","components/apps/mail/toolbar-icons/index.tsx","components/apps/mail/mail-body/style.tsx","components/apps/mail/mail-body/index.tsx","components/apps/mail/mail-form/style.tsx","components/apps/mail/mail-form/index.tsx","containers/apps/mail/main/style.tsx","containers/apps/mail/main/index.tsx","components/apps/mail/compose-mail/style.tsx","components/apps/mail/compose-mail/editor.tsx","components/apps/mail/compose-mail/index.tsx","components/apps/mail/compose-btn/style.tsx","components/apps/mail/compose-btn/index.tsx","components/apps/mail/main-nav/style.tsx","components/apps/mail/main-nav/index.tsx","components/apps/mail/label/style.tsx","components/apps/mail/label/index.tsx","components/apps/mail/label-nav/style.tsx","components/apps/mail/label-nav/index.tsx","components/apps/mail/tags-nav/style.tsx","components/apps/mail/tags-nav/index.tsx","containers/apps/mail/sidebar/style.tsx","containers/apps/mail/sidebar/index.tsx","containers/apps/mail/wrapper/style.tsx","containers/apps/mail/wrapper/index.tsx"],"sourcesContent":["import styled, { themeGet } from \"@doar/shared/styled\";\nimport { Input } from \"@doar/components\";\n\nexport const StyledForm = styled.form`\n    display: flex;\n    align-items: center;\n    input {\n        &:hover,\n        &:focus,\n        &:active {\n            border: none;\n            box-shadow: none;\n        }\n    }\n`;\n\nexport const StyledInput = styled(({ ...rest }) => <Input {...rest} />)`\n    border-width: 0;\n    background-color: transparent;\n    font-size: inherit;\n    padding: 0;\n    color: ${themeGet(\"colors.text2\")};\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n`;\n","import { StyledForm, StyledInput } from \"./style\";\n\nconst SearchForm = () => {\n    return (\n        <StyledForm>\n            <StyledInput\n                id=\"file-search\"\n                name=\"file-search\"\n                placeholder=\"Search mail\"\n            />\n        </StyledForm>\n    );\n};\n\nexport default SearchForm;\n","import styled, { themeGet, css } from \"@doar/shared/styled\";\nimport { Media } from \"@doar/components\";\n\nexport const StyledMedia = styled(({ ...rest }) => <Media {...rest} />)`\n    padding: 15px 20px;\n    background-color: ${themeGet(\"colors.lilac\")};\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    &:not(:first-of-type) {\n        margin-top: -1px;\n        border-top: 1px solid ${themeGet(\"colors.light\")};\n    }\n    &.unread {\n        background-color: #fff;\n    }\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.zircon\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: transparent;\n            &:hover,\n            &:focus {\n                background-color: ${themeGet(\"colors.darkdarken2\")};\n            }\n            + .media {\n                border-top-color: ${themeGet(\"colors.gray900\")};\n            }\n            &.unread {\n                background-color: ${themeGet(\"colors.gray900\")};\n                &:hover,\n                &:focus {\n                    background-color: ${themeGet(\"colors.gray900\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledTop = styled.div`\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 2px;\n    align-items: center;\n    justify-content: space-between;\n    display: flex;\n`;\n","import {\n    Avatar,\n    AvatarInitial,\n    MediaBody,\n    Text,\n    Heading,\n} from \"@doar/components\";\nimport { StyledMedia, StyledTop } from \"./style\";\n\ninterface IProps {\n    color?: string;\n    image?: string;\n    name: string;\n    time: string;\n    title: string;\n    excerpt: string;\n    status?: \"read\" | \"unread\";\n    onClick?: () => void;\n}\n\nconst GroupItem = ({\n    color,\n    image,\n    name,\n    time,\n    title,\n    excerpt,\n    status,\n    onClick,\n}: IProps) => {\n    return (\n        <StyledMedia className={status} onClick={onClick}>\n            <Avatar>\n                {!image && (\n                    <AvatarInitial bg={color}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n                {image && <img src={image} alt=\"name\" />}\n            </Avatar>\n            <MediaBody ml=\"15px\">\n                <StyledTop>\n                    <Text as=\"span\" fontSize=\"12px\">\n                        {name}\n                    </Text>\n                    <Text as=\"span\" fontSize=\"11px\">\n                        {time}\n                    </Text>\n                </StyledTop>\n                <Heading fontSize=\"13px\">{title}</Heading>\n                <Text fontSize=\"12px\" color=\"text3\">\n                    {excerpt}\n                </Text>\n            </MediaBody>\n        </StyledMedia>\n    );\n};\n\nGroupItem.defaultProps = {\n    status: \"read\",\n};\n\nexport default GroupItem;\n","import styled, { device, themeGet, tinycolor, css } from \"@doar/shared/styled\";\n\nexport const StyledGroup = styled.div`\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 100vw;\n    bottom: 0;\n    transition: all 0.3s;\n    @media (min-width: 375px) {\n        left: 220px;\n    }\n    ${device.medium} {\n        width: auto;\n        right: 0;\n        left: 220px;\n    }\n    ${device.xlarge} {\n        width: 320px;\n        border-right: 1px solid ${themeGet(\"colors.border\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(5)\n                .toString()};\n        `}\n`;\n\nexport const StyledHeader = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 55px;\n    background-color: #fff;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n    .search {\n        color: ${themeGet(\"colors.text3\")};\n        align-self: center;\n        width: 18px;\n        stroke-width: 2.8px;\n        margin-right: 10px;\n        margin-top: -2px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(3)\n                .toString()};\n        `}\n`;\n\nexport const StyledBody = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const StyledTopDiv = styled.div`\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    align-items: center;\n    justify-content: space-between;\n    display: flex;\n`;\n\nexport const StyledLabel = styled.h6`\n    display: block;\n    padding: 6px 20px;\n    background-color: ${(props) =>\n        !!props.theme &&\n        css`\n            ${tinycolor(themeGet(\"colors.light\")(props) as string)\n                .setAlpha(0.8)\n                .toRgbString()}\n        `};\n    text-transform: uppercase;\n    font-size: 10px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    color: ${themeGet(\"colors.text3\")};\n    margin: 1px 0;\n    &:first-of-type {\n        margin-top: 0;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(7)\n                .toString()};\n        `}\n`;\n\nexport const StyledList = styled.div``;\n\nexport const StyledReadMore = styled.div`\n    padding-bottom: 5px;\n    padding-left: 5px;\n    padding-right: 5px;\n    padding-top: 1px;\n    button {\n        font-size: 10px;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n        font-weight: 500;\n        min-height: inherit;\n        border-width: 0;\n    }\n`;\n","import { Search } from \"react-feather\";\nimport { Heading, Text, Anchor, Button } from \"@doar/components\";\nimport ScrollBar from \"../../../../components/scrollbar\";\nimport SearchForm from \"../../../../components/apps/mail/search-form\";\nimport GroupItem from \"../../../../components/apps/mail/group-item\";\nimport { useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleBody } from \"../../../../redux/slices/ui\";\nimport {\n    StyledGroup,\n    StyledHeader,\n    StyledBody,\n    StyledTopDiv,\n    StyledLabel,\n    StyledList,\n    StyledReadMore,\n} from \"./style\";\n\nconst Group = () => {\n    const dispatch = useAppDispatch();\n    const handleBody = () => {\n        dispatch(toggleBody());\n    };\n    return (\n        <StyledGroup>\n            <StyledHeader>\n                <Search className=\"search\" />\n                <SearchForm />\n            </StyledHeader>\n            <ScrollBar top=\"55px\">\n                <StyledBody>\n                    <StyledTopDiv>\n                        <Heading tt=\"uppercase\" fontWeight={600} mb=\"0px\">\n                            Inbox\n                        </Heading>\n                        <Text color=\"text3\" fontSize=\"12px\">\n                            Sort:\n                            <Anchor path=\"#!\" variant=\"link2\">\n                                Date\n                            </Anchor>\n                        </Text>\n                    </StyledTopDiv>\n                    <StyledLabel>Today</StyledLabel>\n                    <StyledList>\n                        <GroupItem\n                            color=\"indigo\"\n                            name=\"Dyanne Aceron\"\n                            time=\"1:20pm\"\n                            title=\"Just asking questions\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque \"\n                            status=\"unread\"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"teal\"\n                            name=\"Reynante Labares\"\n                            time=\"11:40am\"\n                            title=\"30 Seconds Survey to Your Next Job\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque \"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"gray800\"\n                            name=\"Rolando Paloso\"\n                            time=\"10:54am\"\n                            title=\"Watch, Listen and Play Longer\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque \"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"pink\"\n                            name=\"Socrates Itumay\"\n                            time=\"09:50am\"\n                            title=\"Pre-Order Sale: Mastering CSS\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque\"\n                            onClick={handleBody}\n                        />\n                    </StyledList>\n                    <StyledLabel>Yesterday</StyledLabel>\n                    <StyledList>\n                        <GroupItem\n                            color=\"primary\"\n                            name=\"Yassi Pressman\"\n                            time=\"8:20pm\"\n                            title=\"Envato Contributor Payment\"\n                            excerpt=\"Commodo ligula eget dolor. Aenean massa cum sociis natoqu \"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"teal\"\n                            name=\"Isidore Dilao\"\n                            time=\"06:42pm\"\n                            title=\"America's Best Dance Cruise\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque \"\n                            onClick={handleBody}\n                        />\n                    </StyledList>\n                    <StyledLabel>January 20</StyledLabel>\n                    <StyledList>\n                        <GroupItem\n                            color=\"secondary\"\n                            name=\"Dexter Dela Cruz\"\n                            time=\"4:18pm\"\n                            title=\"A Flaming Pile of Garbage\"\n                            excerpt=\"Commodo ligula eget dolor. Aenean massa cum sociis natoqu \"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"primary\"\n                            name=\"Adrian Monino\"\n                            time=\"06:42pm\"\n                            title=\"Watch, Listen and Play Longer\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque \"\n                            onClick={handleBody}\n                        />\n                    </StyledList>\n                    <StyledLabel>January 18</StyledLabel>\n                    <StyledList>\n                        <GroupItem\n                            color=\"secondary\"\n                            name=\"Annie Christensen\"\n                            time=\"7:26pm\"\n                            title=\"Just asking questions\"\n                            excerpt=\"Commodo ligula eget dolor. Aenean massa cum sociis natoqu \"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"primary\"\n                            name=\"Adrian Monino\"\n                            time=\"06:42pm\"\n                            title=\"Watch, Listen and Play Longer\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque \"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"gray700\"\n                            name=\"Robert Restificar\"\n                            time=\"12:01pm\"\n                            title=\"Envato Contributor Payment\"\n                            excerpt=\"Commodo ligula eget dolor. Aenean massa cum sociis natoqu\"\n                            onClick={handleBody}\n                        />\n                        <GroupItem\n                            color=\"purple\"\n                            name=\"Raymart Serencio\"\n                            time=\"11:13am\"\n                            title=\"Sale: Javascript Beginners\"\n                            excerpt=\"Aenean commodo ligula eget dolor. Ae nean massa. Cum sociis natoque\"\n                            onClick={handleBody}\n                        />\n                    </StyledList>\n                    <StyledReadMore>\n                        <Button size=\"xs\" color=\"light\" fullwidth>\n                            Load more\n                        </Button>\n                    </StyledReadMore>\n                </StyledBody>\n            </ScrollBar>\n        </StyledGroup>\n    );\n};\n\nexport default Group;\n","import {\n    Media,\n    MediaBody,\n    Avatar,\n    AvatarInitial,\n    Heading,\n    Text,\n} from \"@doar/components\";\n\ninterface IProps {\n    color?: string;\n    image?: string;\n    name: string;\n    time: string;\n}\n\nconst Sender = ({ color, image, name, time }: IProps) => {\n    return (\n        <Media>\n            <Avatar size=\"sm\">\n                {!image && (\n                    <AvatarInitial bg={color}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n                {image && <img src={image} alt={name} />}\n            </Avatar>\n            <MediaBody ml=\"10px\">\n                <Heading fontSize=\"13px\" mb=\"2px\">\n                    {name}\n                </Heading>\n                <Text fontSize=\"11px\" color=\"text3\">\n                    {time}\n                </Text>\n            </MediaBody>\n        </Media>\n    );\n};\n\nexport default Sender;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\n\ninterface IProps {\n    $show: boolean;\n}\n\nexport const StyledToolbar = styled.div<IProps>`\n    position: relative;\n    margin-left: auto;\n    @media (max-width: 575px) {\n        .nav-icon {\n            display: none;\n            ${({ $show }) =>\n                $show &&\n                css`\n                    display: block;\n                    position: absolute;\n                    right: 0;\n                    width: 175px;\n                    height: 75px;\n                    border: 1px solid ${themeGet(\"colors.border\")};\n                    padding: 10px;\n                    background: #ffff;\n                    top: 25px;\n                    .nav-link {\n                        margin-top: 4px;\n                        margin-bottom: 4px;\n                        display: inline-block;\n                        & + .nav-link {\n                            margin-left: 15px;\n                        }\n                    }\n                `}\n        }\n    }\n\n    .option-btn {\n        display: none;\n        @media (max-width: 575px) {\n            display: block;\n            padding: 0;\n            border: 0;\n            background: transparent;\n            color: #8392a5;\n            svg {\n                width: 18px;\n                height: 18px;\n            }\n        }\n    }\n`;\n","import { useState } from \"react\";\nimport {\n    Archive,\n    Slash,\n    Mail,\n    Folder,\n    Tag,\n    Star,\n    Trash,\n    Printer,\n    MoreVertical,\n} from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Nav, NavLink, NavDivider } from \"@doar/components\";\nimport { StyledToolbar } from \"./style\";\n\nconst ToolbarIcons = () => {\n    const [show, setShow] = useState(false);\n    const handleNav = () => {\n        setShow((prev) => !prev);\n    };\n    return (\n        <StyledToolbar $show={show}>\n            <Nav customStyle=\"icon\">\n                <NavLink\n                    path=\"#!\"\n                    data-for=\"tooltip-marchive\"\n                    data-tip=\"Archive\"\n                >\n                    <Archive />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-marchive\"\n                />\n                <NavLink\n                    path=\"#!\"\n                    data-for=\"tooltip-mspam\"\n                    data-tip=\"Report Spam\"\n                >\n                    <Slash />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-mspam\"\n                />\n                <NavLink\n                    path=\"#!\"\n                    data-for=\"tooltip-munread\"\n                    data-tip=\"Mark Unread\"\n                >\n                    <Mail />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-munread\"\n                />\n                <NavLink\n                    path=\"#!\"\n                    data-for=\"tooltip-mlabel\"\n                    data-tip=\"Add Label\"\n                >\n                    <Folder />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-mlabel\"\n                />\n                <NavLink path=\"#!\" data-for=\"tooltip-mtag\" data-tip=\"Add Tag\">\n                    <Tag />\n                </NavLink>\n                <ReactTooltip place=\"bottom\" effect=\"solid\" id=\"tooltip-mtag\" />\n                <NavDivider />\n                <NavLink\n                    path=\"#!\"\n                    data-for=\"tooltip-mimportant\"\n                    data-tip=\"Make Important\"\n                >\n                    <Star />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-mimportant\"\n                />\n                <NavLink path=\"#!\" data-for=\"tooltip-mtrash\" data-tip=\"Trash\">\n                    <Trash />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-mtrash\"\n                />\n                <NavLink path=\"#!\" data-for=\"tooltip-mprint\" data-tip=\"Print\">\n                    <Printer />\n                </NavLink>\n                <ReactTooltip\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    id=\"tooltip-mprint\"\n                />\n            </Nav>\n            <button type=\"button\" className=\"option-btn\" onClick={handleNav}>\n                <MoreVertical />\n            </button>\n        </StyledToolbar>\n    );\n};\n\nexport default ToolbarIcons;\n","import styled, { device, css, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding: 20px;\n    ${device.large} {\n        padding: 25px;\n    }\n    ${device.large} {\n        padding: 30px;\n    }\n`;\n\nexport const StyledContent = styled.div`\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            p {\n                color: ${themeGet(\"colors.gray500\")};\n            }\n        `}\n`;\n","import { Heading, Text } from \"@doar/components\";\nimport { StyledWrap, StyledContent } from \"./style\";\n\nconst MailBody = () => {\n    return (\n        <StyledWrap>\n            <Heading as=\"h5\" mb=\"30px\">\n                30 Seconds Survey to Your Next Job\n            </Heading>\n            <Heading mb=\"0px\" fontWeight={600}>\n                Ms. Katherine Lumaad\n            </Heading>\n            <Text as=\"span\" color=\"text3\">\n                CompanyName, Inc.\n            </Text>\n            <Text color=\"text3\">San Francisco, CA, United States</Text>\n            <StyledContent>\n                <p>Greetings!</p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n                    Aenean commodo ligula eget dolor. Aenean massa. Cum sociis\n                    natoque penatibus et magnis dis parturient montes, nascetur\n                    ridiculus mus.\n                </p>\n                <p>\n                    Donec quam felis, ultricies nec, pellentesque eu, pretium\n                    quis, sem. Nulla consequat massa quis enim. Donec pede\n                    justo, fringilla vel, aliquet nec, vulputate eget, arcu. In\n                    enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.\n                    Nullam dictum felis eu pede mollis pretium. Integer\n                    tincidunt. Cras dapibus. Vivamus elementum semper nisi.\n                    Aenean vulputate eleifend tellus. Aenean leo ligula,\n                    porttitor eu, consequat vitae, eleifend ac, enim. Aliquam\n                    lorem ante, dapibus in, viverra quis, feugiat a, tellus.\n                    Phasellus viverra nulla ut metus varius laoreet. Quisque\n                    rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue.\n                    Curabitur ullamcorper ultricies nisi. Nam eget dui.\n                </p>\n                <p>\n                    Maecenas tempus, tellus eget condimentum rhoncus, sem quam\n                    semper libero, sit amet adipiscing sem.\n                </p>\n                <p>\n                    <span>Sincerely yours,</span>\n                    <br />\n                    <strong>Envato Design Team</strong>\n                </p>\n            </StyledContent>\n        </StyledWrap>\n    );\n};\n\nexport default MailBody;\n","import styled, { device, themeGet, css } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    background-color: #fff;\n    padding-top: 0px;\n    padding: 20px;\n    ${device.large} {\n        padding: 25px;\n    }\n    ${device.xlarge} {\n        padding: 30px;\n    }\n    .ql {\n        &-container {\n            border-bottom-right-radius: 0.25rem;\n            border-bottom-left-radius: 0.25rem;\n            border-color: ${themeGet(\"colors.border\")} !important;\n            height: 100px;\n            font-size: 13px;\n            ${device.large} {\n                font-size: 14px;\n            }\n        }\n        &-editor {\n            padding: 20px;\n            color: ${themeGet(\"colors.text\")};\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n            .ql-editor {\n                color: ${themeGet(\"colors.gray500\")};\n            }\n            .ql-snow.ql-toolbar button {\n                .ql-stroke {\n                    stroke: ${themeGet(\"colors.gray700\")};\n                }\n\n                &:hover,\n                &:focus {\n                    background-color: ${themeGet(\"colors.gray900\")};\n                    .ql-stroke {\n                        stroke: #fff;\n                    }\n                }\n            }\n        `}\n`;\n\nexport const StyledToolbarWrap = styled.div`\n    margin-top: 10px;\n    align-items: center;\n    justify-content: space-between;\n    display: flex;\n`;\n\nexport const StyledToolbar = styled.div`\n    padding: 0px !important;\n    border: 0 !important;\n    .ql {\n        &-toolbar {\n            border-top-left-radius: 0.25rem;\n            border-top-right-radius: 0.25rem;\n        }\n        &-formats {\n            display: inline-flex;\n        }\n    }\n`;\n","import { Component } from \"react\";\nimport { Button } from \"@doar/components\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { StyledWrap, StyledToolbarWrap, StyledToolbar } from \"./style\";\n\nconst CustomToolbar = () => (\n    <StyledToolbarWrap>\n        <StyledToolbar id=\"toolbar\">\n            <span className=\"ql-formats\">\n                <button type=\"button\" className=\"ql-bold\" />\n                <button type=\"button\" className=\"ql-italic\" />\n                <button type=\"button\" className=\"ql-underline\" />\n            </span>\n            <span className=\"ql-formats\">\n                <button type=\"button\" className=\"ql-link\" />\n                <button type=\"button\" className=\"ql-image\" />\n            </span>\n        </StyledToolbar>\n\n        <Button>Reply</Button>\n    </StyledToolbarWrap>\n);\n\ninterface IProps {\n    placeholder: string;\n}\n\ninterface IState {\n    editorHtml: string;\n}\n\nclass Editor extends Component<IProps, IState> {\n    static modules = {\n        toolbar: {\n            container: \"#toolbar\",\n        },\n    };\n\n    static formats = [\n        \"header\",\n        \"font\",\n        \"size\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strike\",\n        \"blockquote\",\n        \"list\",\n        \"bullet\",\n        \"indent\",\n        \"link\",\n        \"image\",\n        \"color\",\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            editorHtml: \"Type here to <u>Reply</u> or <u>Forward</u>\",\n        };\n    }\n\n    handleChange = (html: string): void => {\n        this.setState({ editorHtml: html });\n    };\n\n    render(): JSX.Element {\n        const { editorHtml } = this.state;\n        const { placeholder } = this.props;\n        const { modules, formats } = Editor;\n        return (\n            <StyledWrap>\n                <ReactQuill\n                    value={editorHtml}\n                    onChange={this.handleChange}\n                    placeholder={placeholder}\n                    modules={modules}\n                    formats={formats}\n                />\n                <CustomToolbar />\n            </StyledWrap>\n        );\n    }\n}\n\nexport default Editor;\n","import styled, { device, css, themeGet, tinycolor } from \"@doar/shared/styled\";\n\nexport const StyledMain = styled.div`\n    position: absolute;\n    top: 0;\n    left: 200vw;\n    bottom: 0;\n    width: 100%;\n    background-color: ${themeGet(\"colors.whisper\")};\n    ${device.xlarge} {\n        left: 540px;\n        width: auto;\n        right: 0;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(5)\n                .toString()};\n        `}\n`;\n\nexport const StyledHeader = styled.div`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 55px;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    padding: 0 20px;\n    display: flex;\n    align-items: center;\n    z-index: 99;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(3)\n                .toString()};\n        `}\n`;\n\nexport const StyledBody = styled.div`\n    background-color: #fff;\n    width: 100%;\n    height: 100%;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: transparent;\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n`;\n\nexport const StyledToggleBtn = styled.button`\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    color: ${themeGet(\"colors.text2\")};\n    margin-right: 20px;\n    display: none;\n    ${device.large} {\n        display: block;\n    }\n    ${device.xlarge} {\n        display: none;\n    }\n`;\n","import { ArrowLeft } from \"react-feather\";\nimport Sender from \"../../../../components/apps/mail/sender\";\nimport ToolbarIcons from \"../../../../components/apps/mail/toolbar-icons\";\nimport MailBody from \"../../../../components/apps/mail/mail-body\";\nimport MailForm from \"../../../../components/apps/mail/mail-form\";\nimport ScrollBar from \"../../../../components/scrollbar\";\nimport { useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleBody } from \"../../../../redux/slices/ui\";\nimport { StyledMain, StyledHeader, StyledBody, StyledToggleBtn } from \"./style\";\n\nconst Main = () => {\n    const dispatch = useAppDispatch();\n    const bodyHandler = () => {\n        dispatch(toggleBody());\n    };\n    return (\n        <StyledMain>\n            <StyledHeader>\n                <StyledToggleBtn type=\"button\" onClick={bodyHandler}>\n                    <ArrowLeft />\n                </StyledToggleBtn>\n                <Sender\n                    color=\"teal\"\n                    name=\"Reynante Labares\"\n                    time=\"Today, 11:40am\"\n                />\n                <ToolbarIcons />\n            </StyledHeader>\n            <ScrollBar top=\"55px\">\n                <StyledBody>\n                    <MailBody />\n                    <MailForm placeholder=\"Type Here\" />\n                </StyledBody>\n            </ScrollBar>\n        </StyledMain>\n    );\n};\n\nexport default Main;\n","import styled, { device, themeGet, css } from \"@doar/shared/styled\";\nimport { ModalHeader, ModalBody } from \"@doar/components\";\n\nexport const StyledHeader = styled(({ ...rest }) => <ModalHeader {...rest} />)`\n    background-color: ${themeGet(\"colors.gray900\")};\n    padding: 20px;\n    color: #fff;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    .nav-link {\n        color: rgba(255, 255, 255, 0.5);\n    }\n`;\n\nexport const StyledTitle = styled.h6`\n    margin-bottom: 0;\n    font-weight: 400;\n    position: relative;\n    top: 1px;\n    color: #fff;\n`;\n\nexport const StyledBody = styled(({ ...rest }) => <ModalBody {...rest} />)`\n    transition: all 0.3s;\n    ${device.large} {\n        padding: 30px;\n    }\n    .form-control {\n        &:hover,\n        &:focus {\n            outline: none;\n            border: none;\n            box-shadow: none;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-width: 0;\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n            box-shadow: none;\n            color: ${themeGet(\"colors.gray500\")};\n            .form-control {\n                background-color: transparent;\n                color: ${themeGet(\"colors.gray300\")};\n                &:placeholder {\n                    color: ${themeGet(\"colors.gray700\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledWrap = styled.div`\n    background-color: #fff;\n    margin-top: 15px;\n    .ql {\n        &-container {\n            border-bottom-right-radius: 0.25rem;\n            border-bottom-left-radius: 0.25rem;\n            border-color: ${themeGet(\"colors.border\")} !important;\n            height: 80px;\n            ${device.small} {\n                height: 150px;\n            }\n        }\n        &-editor {\n            padding: 20px;\n            color: ${themeGet(\"colors.text\")};\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: transparent;\n            .ql-editor {\n                color: ${themeGet(\"colors.gray500\")};\n                &.ql-blank {\n                    &:before {\n                        color: ${themeGet(\"colors.gray500\")};\n                        font-style: normal;\n                        font-size: 18px;\n                    }\n                }\n            }\n            .ql-snow.ql-toolbar button {\n                .ql-stroke {\n                    stroke: ${themeGet(\"colors.gray700\")};\n                }\n\n                &:hover,\n                &:focus {\n                    background-color: ${themeGet(\"colors.gray900\")};\n                    .ql-stroke {\n                        stroke: #fff;\n                    }\n                }\n            }\n        `}\n`;\n\nexport const StyledToolbarWrap = styled.div`\n    margin-top: 25px;\n    align-items: center;\n    justify-content: space-between;\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nexport const StyledToolbar = styled.div`\n    padding: 0px !important;\n    border: 0 !important;\n    .ql {\n        &-toolbar {\n            border-top-left-radius: 0.25rem;\n            border-top-right-radius: 0.25rem;\n        }\n        &-formats {\n            display: inline-flex;\n        }\n    }\n`;\n\nexport const StyledBtnWrap = styled.div`\n    margin-top: 15px;\n    ${device.small} {\n        margin-top: 0px;\n    }\n    button {\n        font-size: 13px;\n    }\n`;\n","import { Component } from \"react\";\nimport { Button } from \"@doar/components\";\nimport ReactQuill from \"react-quill\";\nimport {\n    StyledWrap,\n    StyledToolbarWrap,\n    StyledToolbar,\n    StyledBtnWrap,\n} from \"./style\";\n\nconst CustomToolbar = () => (\n    <StyledToolbarWrap>\n        <StyledToolbar id=\"toolbar2\">\n            <span className=\"ql-formats\">\n                <button type=\"button\" className=\"ql-bold\" />\n                <button type=\"button\" className=\"ql-italic\" />\n                <button type=\"button\" className=\"ql-underline\" />\n            </span>\n            <span className=\"ql-formats\">\n                <button type=\"button\" className=\"ql-link\" />\n                <button type=\"button\" className=\"ql-image\" />\n            </span>\n        </StyledToolbar>\n        <StyledBtnWrap>\n            <Button color=\"white\" mr=\"5px\">\n                Save as Draft\n            </Button>\n            <Button>Reply</Button>\n        </StyledBtnWrap>\n    </StyledToolbarWrap>\n);\n\ninterface IProps {\n    placeholder: string;\n}\n\ninterface IState {\n    editorHtml: string;\n}\n\nclass Editor extends Component<IProps, IState> {\n    static modules = {\n        toolbar: {\n            container: \"#toolbar2\",\n        },\n    };\n\n    static formats = [\n        \"header\",\n        \"font\",\n        \"size\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strike\",\n        \"blockquote\",\n        \"list\",\n        \"bullet\",\n        \"indent\",\n        \"link\",\n        \"image\",\n        \"color\",\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            editorHtml: \"\",\n        };\n    }\n\n    handleChange = (html: string): void => {\n        this.setState({ editorHtml: html });\n    };\n\n    render(): JSX.Element {\n        const { editorHtml } = this.state;\n        const { placeholder } = this.props;\n        const { modules, formats } = Editor;\n        return (\n            <StyledWrap>\n                <ReactQuill\n                    value={editorHtml}\n                    onChange={this.handleChange}\n                    placeholder={placeholder}\n                    modules={modules}\n                    formats={formats}\n                />\n                <CustomToolbar />\n            </StyledWrap>\n        );\n    }\n}\n\nexport default Editor;\n","import { X } from \"react-feather\";\nimport { Modal, Row, Col, Input, HRLine, Nav, NavLink } from \"@doar/components\";\nimport Editor from \"./editor\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { StyledHeader, StyledTitle, StyledBody } from \"./style\";\n\ninterface IProps {\n    show: boolean;\n    onClose: () => void;\n}\n\nconst ComposeMail = ({ show, onClose }: IProps) => {\n    return (\n        <Modal show={show} onClose={onClose} size=\"lg\">\n            <StyledHeader>\n                <StyledTitle>New Message</StyledTitle>\n                <Nav customStyle=\"icon\">\n                    <NavLink path=\"#!\" onClick={onClose}>\n                        <X />\n                    </NavLink>\n                </Nav>\n            </StyledHeader>\n            <StyledBody>\n                <form>\n                    <Row alignItems=\"center\">\n                        <Col sm>Recipient:</Col>\n                        <Col sm={10}>\n                            <Input\n                                name=\"email-recipient\"\n                                id=\"email-recipient\"\n                                placeholder=\"Enter recipient's email address\"\n                                px=\"0px\"\n                                borderWidth=\"0px\"\n                            />\n                        </Col>\n                    </Row>\n                    <HRLine my=\"10px\" />\n                    <Row alignItems=\"center\">\n                        <Col sm>Subject:</Col>\n                        <Col sm={10}>\n                            <Input\n                                name=\"email-subject\"\n                                id=\"email-subject\"\n                                placeholder=\"Enter Subject\"\n                                px=\"0px\"\n                                borderWidth=\"0px\"\n                            />\n                        </Col>\n                    </Row>\n                    <Editor placeholder=\"Write your message here\" />\n                </form>\n            </StyledBody>\n        </Modal>\n    );\n};\n\nexport default ComposeMail;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding: 20px;\n    button {\n        font-size: 10px;\n        text-transform: uppercase;\n        letter-spacing: 2px;\n        font-family: ${themeGet(\"fonts.interUi\")};\n        font-weight: 500;\n    }\n`;\n","import { useState } from \"react\";\nimport { Button } from \"@doar/components\";\nimport ComposeMail from \"../compose-mail\";\nimport { StyledWrap } from \"./style\";\n\nconst ComposeBtn = () => {\n    const [show, setShow] = useState(false);\n    const handleModal = () => {\n        setShow((prev) => !prev);\n    };\n\n    return (\n        <>\n            <StyledWrap>\n                <Button onClick={handleModal} fullwidth>\n                    Compose\n                </Button>\n            </StyledWrap>\n            <ComposeMail show={show} onClose={handleModal} />\n        </>\n    );\n};\n\nexport default ComposeBtn;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding-bottom: 10px;\n    padding-left: 10px;\n    padding-right: 10px;\n`;\n","import { Inbox, Monitor, Clock, Star, File, Slash, Trash } from \"react-feather\";\nimport { Badge, Nav, NavLink } from \"@doar/components\";\nimport { StyledWrap } from \"./style\";\n\nconst MainNav = () => {\n    return (\n        <StyledWrap>\n            <Nav customStyle=\"sidebar\" fontSize=\"13px\">\n                <NavLink path=\"#!\" active>\n                    <Inbox />\n                    <span>Inbox</span>\n                    <Badge>20</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Monitor />\n                    <span>Starred</span>\n                    <Badge>3</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Clock />\n                    <span>Important</span>\n                    <Badge>10</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Star />\n                    <span>Sent Mail</span>\n                    <Badge>8</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <File />\n                    <span>Drafts</span>\n                    <Badge>15</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Slash />\n                    <span>Spam</span>\n                    <Badge>128</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Trash />\n                    <span>Trash</span>\n                    <Badge>6</Badge>\n                </NavLink>\n            </Nav>\n        </StyledWrap>\n    );\n};\n\nexport default MainNav;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport styled, { themeGet, space, SpaceProps } from \"@doar/shared/styled\";\n\nexport const StyledTitle = styled(({ mb, pl, ...rest }) => (\n    <h6 {...rest} />\n))<SpaceProps>`\n    font-size: 10px;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    font-weight: 500;\n    color: ${themeGet(\"colors.text3\")};\n    line-height: 1.5;\n    ${space}\n`;\n","import { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledTitle } from \"./style\";\n\ntype IProps = SpaceProps & {\n    children: React.ReactNode;\n};\n\nconst Label = ({ children, ...restProps }: IProps) => {\n    return <StyledTitle {...restProps}>{children}</StyledTitle>;\n};\n\nexport default Label;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding: 10px;\n`;\n","import { Folder } from \"react-feather\";\nimport { Nav, NavLink } from \"@doar/components\";\nimport Label from \"../label\";\nimport { StyledWrap } from \"./style\";\n\nconst LabelNav = () => {\n    return (\n        <StyledWrap>\n            <Label pl=\"10px\">Label</Label>\n            <Nav customStyle=\"sidebar\" fontSize=\"13px\">\n                <NavLink path=\"#!\">\n                    <Folder />\n                    <span>Social</span>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Folder />\n                    <span>Promotions</span>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Folder />\n                    <span>Updates</span>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Folder />\n                    <span>Business</span>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Folder />\n                    <span>Finance</span>\n                </NavLink>\n            </Nav>\n        </StyledWrap>\n    );\n};\n\nexport default LabelNav;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding: 10px;\n`;\n","import { Tag } from \"react-feather\";\nimport { Nav, NavLink } from \"@doar/components\";\nimport Label from \"../label\";\nimport { StyledWrap } from \"./style\";\n\nconst TagsNav = () => {\n    return (\n        <StyledWrap>\n            <Label pl=\"10px\">Tags</Label>\n            <Nav customStyle=\"sidebar\" fontSize=\"13px\">\n                <NavLink path=\"#!\">\n                    <Tag />\n                    <span>Facebook</span>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <Tag />\n                    <span>Twitter</span>\n                </NavLink>\n            </Nav>\n        </StyledWrap>\n    );\n};\n\nexport default TagsNav;\n","import styled, { device, themeGet, css, tinycolor } from \"@doar/shared/styled\";\n\nexport const StyledSidebar = styled.div`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 100vw;\n    @media (min-width: 375px) {\n        width: 220px;\n        border-right: 1px solid ${themeGet(\"colors.border\")};\n    }\n    ${device.medium} {\n        left: 0;\n        opacity: 1;\n        visibility: visible;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(5)\n                .toString()};\n        `}\n`;\n\nexport const StyledBody = styled.div`\n    position: relative;\n    height: 100%;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .nav-link {\n                color: ${themeGet(\"colors.gray500\")};\n\n                &:hover,\n                &:focus {\n                    background-color: ${themeGet(\"colors.gray900\")};\n                    color: #fff;\n                }\n\n                &.active {\n                    background-color: ${tinycolor(\n                        themeGet(\"colors.gray900\")(props) as string\n                    )\n                        .lighten(2)\n                        .toString()};\n                }\n            }\n        `}\n`;\n","import Scrollbar from \"../../../../components/scrollbar\";\nimport ComposeBtn from \"../../../../components/apps/mail/compose-btn\";\nimport MainNav from \"../../../../components/apps/mail/main-nav\";\nimport LabelNav from \"../../../../components/apps/mail/label-nav\";\nimport TagsNav from \"../../../../components/apps/mail/tags-nav\";\nimport { StyledSidebar, StyledBody } from \"./style\";\n\nconst Sidebar = () => {\n    return (\n        <StyledSidebar className=\"sidebar\">\n            <Scrollbar top=\"0px\">\n                <StyledBody>\n                    <ComposeBtn />\n                    <MainNav />\n                    <LabelNav />\n                    <TagsNav />\n                </StyledBody>\n            </Scrollbar>\n        </StyledSidebar>\n    );\n};\n\nexport default Sidebar;\n","import styled, { device, css } from \"@doar/shared/styled\";\n\ninterface IProps {\n    $showSidebar: boolean;\n    $showBody: boolean;\n    $layout?: 1 | 2;\n}\n\nexport const StyledWrapper = styled.div<IProps>`\n    top: 55px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    transform: translateX(-100vw);\n    transition: all 0.3s;\n    @media (min-width: 375px) {\n        transform: translateX(-220px);\n    }\n    ${device.medium} {\n        transform: translateX(0) !important;\n    }\n    ${device.large} {\n        top: 60px;\n    }\n    ${({ $layout }) =>\n        $layout === 1 &&\n        css`\n            position: fixed;\n        `}\n    ${({ $layout }) =>\n        $layout === 2 &&\n        css`\n            position: fixed;\n            ${device.large} {\n                position: relative;\n                height: 100%;\n                top: auto;\n            }\n        `}\n    ${({ $showSidebar }) =>\n        $showSidebar &&\n        css`\n            transform: translateX(0) !important;\n        `}\n    ${({ $showBody }) =>\n        $showBody &&\n        css`\n            @media (max-width: 1199.98px) {\n                transform: translateX(-200vw) !important;\n            }\n        `}\n`;\n","import { useAppSelector } from \"../../../../redux/hooks\";\nimport { StyledWrapper } from \"./style\";\n\ninterface IProps {\n    layout?: 1 | 2;\n    children: React.ReactNode;\n}\n\nconst Wrapper = ({ children, layout }: IProps) => {\n    const { sidebar, isBody } = useAppSelector((state) => state.ui);\n    return (\n        <StyledWrapper\n            $showSidebar={sidebar}\n            $showBody={isBody}\n            $layout={layout}\n            className=\"main-wrapper\"\n        >\n            {children}\n        </StyledWrapper>\n    );\n};\n\nWrapper.defaultProps = {\n    layout: 1,\n};\n\nexport default Wrapper;\n"],"names":["StyledForm","styled","StyledInput","rest","themeGet","id","name","placeholder","StyledMedia","props","theme","css","StyledTop","GroupItem","color","image","time","title","excerpt","status","onClick","className","bg","substring","src","alt","ml","as","fontSize","defaultProps","StyledGroup","device","tinycolor","darken","toString","StyledHeader","StyledBody","StyledTopDiv","StyledLabel","setAlpha","toRgbString","StyledList","StyledReadMore","dispatch","useAppDispatch","handleBody","toggleBody","top","tt","fontWeight","mb","path","variant","size","fullwidth","StyledToolbar","$show","useState","show","setShow","customStyle","place","effect","type","prev","StyledWrap","StyledContent","StyledToolbarWrap","CustomToolbar","Editor","handleChange","html","setState","editorHtml","state","this","modules","formats","value","onChange","Component","toolbar","container","StyledMain","StyledToggleBtn","StyledTitle","StyledBtnWrap","mr","onClose","alignItems","sm","px","borderWidth","my","handleModal","active","pl","space","children","restProps","StyledSidebar","lighten","StyledWrapper","$layout","$showSidebar","$showBody","Wrapper","layout","useAppSelector","ui","sidebar","isBody"],"sourceRoot":""}