{"version":3,"file":"static/js/3575.47d38507.chunk.js","mappings":"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","sources":["components/scrollbar/style.tsx","components/scrollbar/index.tsx","components/seo.tsx","hooks/window-size.ts","hooks/contact-item.ts","components/aside-layout/logo/style.tsx","components/aside-layout/logo/index.tsx","layouts/layout-02/header/style.tsx","layouts/layout-02/header/index.tsx","components/aside-layout/user/style.tsx","components/aside-layout/user/alerts.tsx","components/aside-layout/user/loggedin-user.tsx","components/aside-layout/user/index.tsx","layouts/layout-02/aside/style.tsx","layouts/layout-02/aside/index.tsx","layouts/layout-02/index.tsx","../node_modules/clsx/dist/clsx.m.js"],"sourcesContent":["import styled, { PositionProps, position, css } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled(({ top, bottom, ...rest }) => (\n    <div {...rest} />\n))<PositionProps>`\n    height: 100%;\n    position: relative;\n    ${({ bottom }) =>\n        !!bottom &&\n        css`\n            height: calc(100% - ${bottom});\n        `}\n    .ps {\n        overflow: hidden;\n    }\n    .ps > .ps__rail-y {\n        width: 3px;\n        background-color: rgba(72, 83, 114, 0.06);\n        z-index: 10;\n        position: absolute;\n        left: auto !important;\n        right: 0;\n        opacity: 0;\n        margin: 1px;\n        transition: opacity 0.2s;\n    }\n    @media (prefers-reduced-motion: reduce) {\n        .ps > .ps__rail-y {\n            transition: none;\n        }\n    }\n    .ps > .ps__rail-y > .ps__thumb-y {\n        position: absolute;\n        border-radius: 0;\n        width: 3px;\n        left: 0;\n        background-color: #97a3b9;\n    }\n    .ps.ps--active-y:hover > .ps__rail-y,\n    .ps.ps--active-y:focus > .ps__rail-y {\n        opacity: 1;\n    }\n\n    .scrollbar-sm > .ps__rail-y {\n        width: 1px;\n    }\n    .scrollbar-sm > .ps__rail-y > .ps__thumb-y {\n        width: 1px;\n    }\n\n    .scrollbar-lg > .ps__rail-y {\n        width: 6px;\n    }\n    .scrollbar-lg > .ps__rail-y > .ps__thumb-y {\n        width: 6px;\n    }\n    .scrollbar-container {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: auto;\n        ${position};\n    }\n`;\n","import { PositionProps } from \"@doar/shared/styled\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { StyledWrap } from \"./style\";\n\ntype TProps = PositionProps & {\n    children: React.ReactNode;\n};\n\nconst ScrollBar = ({ children, ...rest }: TProps) => {\n    return (\n        <StyledWrap {...rest} className=\"scrollbar\">\n            <PerfectScrollbar>{children}</PerfectScrollbar>\n        </StyledWrap>\n    );\n};\n\nexport default ScrollBar;\n","import { Helmet } from \"react-helmet\";\n\ninterface IProps {\n    title?: string;\n    titleTemplate?: string;\n    description?: string;\n}\n\nconst SEO = ({ title, titleTemplate, description }: IProps) => {\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>\n                {title} - {titleTemplate}\n            </title>\n            <meta name=\"description\" content={description} />\n        </Helmet>\n    );\n};\n\nSEO.defaultProps = {\n    title: \"Doar\",\n    titleTemplate: \"Responsive React Admin Template\",\n    description: \"Responsive React Admin Template\",\n};\n\nexport default SEO;\n","import { useState, useEffect } from \"react\";\nimport { ISize } from \"@doar/shared/types\";\n\nfunction useWindowSize(): ISize {\n    const [windowSize, setWindowSize] = useState<ISize>({\n        width: undefined,\n        height: undefined,\n    });\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}\n\nexport default useWindowSize;\n","import { useState, MouseEvent } from \"react\";\nimport { useWindowSize } from \"@doar/shared/hooks\";\nimport { useAppDispatch } from \"../redux/hooks\";\nimport { toggleSidebar } from \"../redux/slices/ui\";\n\ninterface IReturn {\n    clickHandler: (e: MouseEvent<HTMLDivElement>) => void;\n    activeId: string;\n}\n\nexport default (defaultActive: string): IReturn => {\n    const [activeId, setActiveId] = useState<string>(defaultActive);\n    const dispatch = useAppDispatch();\n    const { width } = useWindowSize();\n    const clickHandler = (e: MouseEvent<HTMLDivElement>) => {\n        const target = e.target as HTMLElement;\n        let targetId = activeId;\n        if (!target.classList.contains(\"media\")) {\n            const id = target.closest(\".media\")?.id;\n            targetId = id || activeId;\n        } else {\n            targetId = target.id || activeId;\n        }\n        setActiveId(targetId);\n        if (width && width < 992) {\n            dispatch(toggleSidebar({ isOpen: undefined }));\n        }\n    };\n\n    return { clickHandler, activeId };\n};\n","import styled, { device, themeGet, css } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledLogo = styled(({ ...rest }) => <Anchor {...rest} />)`\n    font-size: 22px;\n    font-weight: 700;\n    letter-spacing: -1px;\n    margin-top: -3px;\n    color: ${themeGet(\"colors.gulf\")};\n    span {\n        display: inline-block;\n        font-weight: 400;\n        color: ${themeGet(\"colors.primary\")};\n    }\n    ${device.large} {\n        font-size: 24px;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n","import { StyledLogo } from \"./style\";\n\nconst AsideLogo = () => {\n    return (\n        <StyledLogo className=\"aside-logo\" path=\"/\">\n            do<span>ar</span>\n        </StyledLogo>\n    );\n};\n\nexport default AsideLogo;\n","import styled, { device, themeGet, css, tinycolor } from \"@doar/shared/styled\";\n\ninterface IProps {\n    $minimize: boolean;\n    $mdMinimize: boolean;\n    $show: boolean;\n}\n\nconst minimizeCSS = css`\n    width: 60px;\n    justify-content: center;\n    .aside-logo {\n        display: none;\n    }\n`;\n\nexport const StyledHeader = styled.header<IProps>`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 54px;\n    padding: 0 18px;\n    transform: translateX(54px);\n\n    ${device.large} {\n        padding: 0 20px;\n        transform: none;\n        height: 59px;\n    }\n    ${(props) =>\n        props.theme.name !== \"dark\" &&\n        css`\n            border-right: 1px solid ${themeGet(\"colors.border\")};\n            background-color: #fff;\n        `}\n    ${({ $show }) =>\n        $show &&\n        css`\n            transform: none;\n            border-right-color: transparent;\n            .display-btn {\n                svg {\n                    &:first-of-type {\n                        display: none !important;\n                    }\n                    &:last-of-type {\n                        display: block !important;\n                    }\n                }\n            }\n        `}\n    ${({ $minimize }) =>\n        $minimize &&\n        css`\n            ${minimizeCSS}\n            ${device.large} {\n                padding: 0;\n            }\n        `}\n    \n    ${({ $mdMinimize, $show }) =>\n        $mdMinimize &&\n        !$show &&\n        css`\n            ${device.lgToXl} {\n                padding: 0;\n                ${minimizeCSS}\n            }\n        `}\n    ${({ $mdMinimize, $show }) =>\n        $mdMinimize &&\n        $show &&\n        css`\n            ${device.lgToXl} {\n                border-right-color: ${themeGet(\"colors.border\")};\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-right: 1px solid\n                ${tinycolor(themeGet(\"colors.white\")(props) as string)\n                    .setAlpha(0.06)\n                    .toRgbString()};\n        `}\n`;\n\nexport const StyledMenuBtn = styled.button`\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    line-height: 0.5;\n    svg {\n        color: ${themeGet(\"colors.text3\")};\n        margin-top: -3px;\n    }\n    &:hover,\n    &:focus {\n        svg {\n            color: ${themeGet(\"colors.text2\")};\n        }\n    }\n    &.minimize-btn {\n        display: none;\n        ${device.xlarge} {\n            display: block;\n        }\n    }\n    &.display-btn {\n        display: block;\n        ${device.xlarge} {\n            display: none;\n        }\n        svg {\n            &:last-of-type {\n                margin-top: 0;\n                display: none;\n            }\n        }\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            &:hover {\n                color: ${themeGet(\"colors.white\")};\n            }\n        `}\n`;\n\ninterface IMenuBtn {\n    $hasSidebar?: boolean;\n    $sidebarOpen?: boolean;\n    $bodyOpen?: boolean;\n}\n\nexport const StyledSidebarBtn = styled.button<IMenuBtn>`\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    line-height: 0.5;\n    svg {\n        color: ${themeGet(\"colors.text3\")};\n    }\n    ${device.small} {\n        margin-left: 20px;\n    }\n    ${device.large} {\n        display: none;\n    }\n\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen &&\n        !$bodyOpen &&\n        css`\n            display: none;\n        `}\n    ${({ $bodyOpen, $sidebarOpen }) =>\n        $bodyOpen &&\n        $sidebarOpen &&\n        css`\n            display: block;\n        `}\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            &:hover {\n                color: ${themeGet(\"colors.white\")};\n            }\n        `}\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback } from \"react\";\nimport { Menu, X, ArrowLeft } from \"react-feather\";\nimport AsideLogo from \"../../../components/aside-layout/logo\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\";\nimport { toggleSidebar, toggleBody } from \"../../../redux/slices/ui\";\nimport { StyledHeader, StyledMenuBtn, StyledSidebarBtn } from \"./style\";\n\ninterface IProps {\n    minimizeHandler: () => void;\n    displayHandler: () => void;\n    minimize: boolean;\n    mdMinimize: boolean;\n    show: boolean;\n    sidebarLayout?: 1 | 2;\n}\n\nconst Header = ({\n    minimizeHandler,\n    displayHandler,\n    minimize,\n    mdMinimize,\n    show,\n    sidebarLayout,\n}: IProps) => {\n    const dispatch = useAppDispatch();\n    const { sidebar, isBody } = useAppSelector((state) => state.ui);\n    const sidebarHandler = useCallback(\n        (_: any, isOpen?: \"open\") => {\n            dispatch(toggleSidebar({ isOpen }));\n        },\n        [dispatch]\n    );\n\n    const bodyHandler = useCallback(() => {\n        dispatch(toggleBody());\n        dispatch(toggleSidebar({ isOpen: \"open\" }));\n    }, [dispatch]);\n\n    const menuHandler = useCallback(() => {\n        displayHandler();\n        if (show) {\n            sidebarHandler(undefined, \"open\");\n        }\n    }, [show, sidebarHandler, displayHandler]);\n\n    return (\n        <StyledHeader\n            $minimize={minimize}\n            $mdMinimize={mdMinimize}\n            $show={show}\n            className=\"aside-header\"\n        >\n            <AsideLogo />\n\n            <StyledMenuBtn className=\"minimize-btn\" onClick={minimizeHandler}>\n                <Menu size={18} strokeWidth=\"2.5px\" />\n            </StyledMenuBtn>\n\n            {sidebarLayout === 1 && (\n                <>\n                    <StyledMenuBtn\n                        className=\"display-btn\"\n                        onClick={menuHandler}\n                    >\n                        <Menu size={18} strokeWidth=\"2.5px\" />\n                        <X size={18} strokeWidth=\"2.5px\" />\n                    </StyledMenuBtn>\n                    <StyledSidebarBtn\n                        onClick={!isBody ? sidebarHandler : bodyHandler}\n                        $sidebarOpen={sidebar}\n                        $bodyOpen={isBody}\n                    >\n                        <ArrowLeft size={20} strokeWidth=\"2.5px\" />\n                    </StyledSidebarBtn>\n                </>\n            )}\n            {sidebarLayout === 2 && (\n                <>\n                    <StyledMenuBtn\n                        className=\"display-btn\"\n                        onClick={menuHandler}\n                    >\n                        <Menu size={18} strokeWidth=\"2.5px\" />\n                        <X size={18} strokeWidth=\"2.5px\" />\n                    </StyledMenuBtn>\n                    <StyledSidebarBtn\n                        onClick={sidebarHandler}\n                        $sidebarOpen={!sidebar}\n                    >\n                        <ArrowLeft size={20} strokeWidth=\"2.5px\" />\n                    </StyledSidebarBtn>\n                </>\n            )}\n        </StyledHeader>\n    );\n};\n\nexport default Header;\n","import styled, { themeGet, css, tinycolor } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledUser = styled.div`\n    margin-bottom: 25px;\n`;\n\nexport const StyledAvatarWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledAlerts = styled.div`\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledAlert = styled(({ ...rest }) => <Anchor {...rest} />)`\n    display: block;\n    line-height: 1.215;\n    &.new {\n        position: relative;\n        &:before {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            right: 0;\n            width: 7px;\n            height: 7px;\n            background-color: ${themeGet(\"colors.danger\")};\n            border-radius: 100%;\n        }\n    }\n    &:not(:first-of-type) {\n        margin-left: 10px;\n    }\n    ${(props) =>\n        props.theme.name !== \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.text3\")};\n            &.new {\n                &:before {\n                    box-shadow: 0 0 0 2px #fff;\n                }\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${tinycolor(themeGet(\"colors.white\")(props) as string)\n                .setAlpha(0.5)\n                .toRgbString()};\n            &.new {\n                &:before {\n                    box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledLoggedInUser = styled.div`\n    margin-top: 15px;\n`;\n\nexport const StyledUserBtn = styled.button`\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    margin-bottom: 2px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    ${(props) =>\n        props.theme.name !== \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.text4\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.heather\")};\n        `}\n`;\n\nexport const StyledUserData = styled.div`\n    margin-bottom: 15px;\n`;\n\ninterface ICollapse {\n    $show: boolean;\n}\n\nexport const StyledUserCollapse = styled.div<ICollapse>`\n    ${({ $show }) =>\n        !$show &&\n        css`\n            display: none;\n        `}\n`;\n","import ReactTooltip from \"react-tooltip\";\nimport { MessageSquare, Bell, LogOut } from \"react-feather\";\nimport { StyledAlerts, StyledAlert } from \"./style\";\n\nconst Alerts = () => {\n    return (\n        <StyledAlerts className=\"aside-alerts\">\n            <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-message\" />\n            <StyledAlert\n                path=\"#!\"\n                className=\"new\"\n                data-for=\"tooltip-message\"\n                data-tip=\"You have 2 unread messages\"\n            >\n                <MessageSquare size={16} strokeWidth=\"2.3px\" />\n            </StyledAlert>\n\n            <ReactTooltip\n                place=\"top\"\n                effect=\"solid\"\n                id=\"tooltip-notification\"\n            />\n            <StyledAlert\n                path=\"#!\"\n                className=\"new\"\n                data-for=\"tooltip-notification\"\n                data-tip=\"You have 4 new notifications\"\n            >\n                <Bell size={16} strokeWidth=\"2.3px\" />\n            </StyledAlert>\n\n            <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-sign-out\" />\n            <StyledAlert\n                path=\"#!\"\n                data-for=\"tooltip-sign-out\"\n                data-tip=\"Sign out\"\n            >\n                <LogOut size={16} strokeWidth=\"2.3px\" />\n            </StyledAlert>\n        </StyledAlerts>\n    );\n};\n\nexport default Alerts;\n","import { useState } from \"react\";\nimport {\n    ChevronDown,\n    Edit,\n    User,\n    Settings,\n    HelpCircle,\n    LogOut,\n} from \"react-feather\";\nimport { Heading, Text, Nav, NavLink } from \"@doar/components\";\nimport {\n    StyledLoggedInUser,\n    StyledUserBtn,\n    StyledUserCollapse,\n    StyledUserData,\n} from \"./style\";\n\nconst LoggedinUser = () => {\n    const [show, setShow] = useState(false);\n    return (\n        <StyledLoggedInUser className=\"aside-loggedin-user\">\n            <StyledUserData className=\"aside-loggedin-user-data\">\n                <StyledUserBtn\n                    type=\"button\"\n                    onClick={() => setShow((prev) => !prev)}\n                >\n                    <Heading fontWeight={600} mb=\"0px\">\n                        Katherine Pechon\n                    </Heading>\n                    <ChevronDown size={16} strokeWidth=\"2.3px\" />\n                </StyledUserBtn>\n                <Text color=\"text3\" fontSize=\"12px\">\n                    Administrator\n                </Text>\n            </StyledUserData>\n\n            <StyledUserCollapse\n                className=\"aside-loggedin-user-nav\"\n                $show={show}\n            >\n                <Nav vertical customStyle=\"aside\">\n                    <NavLink path=\"#!\">\n                        <Edit /> <span>Edit Profile</span>\n                    </NavLink>\n                    <NavLink path=\"#!\">\n                        <User /> <span>View Profile</span>\n                    </NavLink>\n                    <NavLink path=\"#!\">\n                        <Settings /> <span>Account Settings</span>\n                    </NavLink>\n                    <NavLink path=\"#!\">\n                        <HelpCircle /> <span>Help Center</span>\n                    </NavLink>\n                    <NavLink path=\"#!\">\n                        <LogOut /> <span>Sign Out</span>\n                    </NavLink>\n                </Nav>\n            </StyledUserCollapse>\n        </StyledLoggedInUser>\n    );\n};\n\nexport default LoggedinUser;\n","import { Avatar, AvatarInitial } from \"@doar/components\";\nimport Alerts from \"./alerts\";\nimport LoggedinUser from \"./loggedin-user\";\nimport { StyledUser, StyledAvatarWrap } from \"./style\";\n\nconst AsideUser = () => {\n    return (\n        <StyledUser className=\"aside-user\">\n            <StyledAvatarWrap>\n                <Avatar size=\"md\">\n                    <AvatarInitial>T</AvatarInitial>\n                </Avatar>\n                <Alerts />\n            </StyledAvatarWrap>\n            <LoggedinUser />\n        </StyledUser>\n    );\n};\n\nexport default AsideUser;\n","import styled, { device, css, themeGet } from \"@doar/shared/styled\";\n\ninterface IProps {\n    $minimize: boolean;\n    $maximize: boolean;\n    $mdMinimize: boolean;\n}\n\ninterface IVisibleProps {\n    $show: boolean;\n}\n\ninterface IAsideProps extends IProps, IVisibleProps {}\n\nconst minimizeCSS = css`\n    width: auto;\n    & + .content {\n        margin-left: 60px;\n    }\n    .aside-body-inner {\n        padding: 20px;\n    }\n    .aside-user {\n        margin-bottom: 5px;\n        .avatar {\n            width: 26px;\n            height: 26px;\n            flex-shrink: 0;\n            margin-left: -4px;\n            &-initial {\n                font-size: 10px;\n            }\n        }\n        .aside-alerts {\n            opacity: 0;\n            visibility: hidden;\n            position: fixed;\n        }\n    }\n    .aside-loggedin-user {\n        &-data {\n            display: none;\n        }\n        &-nav {\n            display: block;\n            .nav {\n                width: 100%;\n                flex-wrap: nowrap;\n            }\n            svg {\n                margin-right: 0;\n            }\n            span {\n                position: fixed;\n                opacity: 0;\n                visibility: hidden;\n                margin-left: 15px;\n            }\n        }\n    }\n    .aside-navbar {\n        width: 100%;\n        flex-wrap: nowrap;\n        &-label {\n            display: none;\n        }\n        &-link {\n            svg {\n                margin-right: 0;\n            }\n            span {\n                position: fixed;\n                opacity: 0;\n                visibility: hidden;\n                margin-left: 15px;\n            }\n            &:before {\n                right: auto;\n                left: -20px;\n            }\n            &:after {\n                display: none;\n            }\n        }\n        .submenu {\n            position: relative;\n            & > li {\n                &:first-of-type {\n                    margin-top: 10px;\n                }\n            }\n            &:before {\n                content: \"\";\n                display: block;\n                border-top: 1px solid ${themeGet(\"colors.border\")};\n                margin: 8px 0;\n            }\n        }\n    }\n`;\n\nconst maximizeCSS = css`\n    .scrollbar {\n        width: 240px;\n    }\n    .aside {\n        &-body {\n            width: 100%;\n            display: block;\n            &-inner {\n                padding: 20px;\n            }\n        }\n        &-user {\n            .aside-alerts {\n                opacity: 1;\n                visibility: visible;\n                position: relative;\n            }\n        }\n        &-loggedin-user {\n            &-nav {\n                span {\n                    position: relative;\n                    opacity: 1;\n                    visibility: visible;\n                }\n            }\n        }\n        &-navbar {\n            &-link {\n                span {\n                    position: relative;\n                    opacity: 1;\n                    visibility: visible;\n                }\n                &:after {\n                    display: block;\n                }\n            }\n        }\n    }\n`;\n\nexport const StyledAside = styled.aside<IAsideProps>`\n    width: 240px;\n    height: 100%;\n    transform: translateX(-100%);\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1000;\n    .scrollbar {\n        .ps__thumb-x {\n            display: none;\n        }\n    }\n    ${({ $show }) =>\n        $show &&\n        css`\n            transform: translateX(0);\n        `}\n\n    ${({ $minimize }) =>\n        $minimize &&\n        css`\n            ${minimizeCSS}\n        `}\n\n    ${({ $mdMinimize, $show }) =>\n        $mdMinimize &&\n        !$show &&\n        css`\n            ${device.lgToXl} {\n                ${minimizeCSS}\n            }\n        `}\n\n    ${({ $mdMinimize, $show, $maximize }) =>\n        $mdMinimize &&\n        !$show &&\n        !$maximize &&\n        css`\n            ${device.lgToXl} {\n                .mega-submenu {\n                    display: none;\n                }\n            }\n        `}\n\n    ${({ $maximize }) =>\n        $maximize &&\n        css`\n            ${maximizeCSS}\n        `}\n\n    ${({ $minimize, $maximize }) =>\n        $minimize &&\n        !$maximize &&\n        css`\n            .mega-submenu {\n                display: none;\n            }\n        `}\n\n    ${device.large} {\n        transform: translateX(0);\n    }\n`;\n\nexport const StyledBody = styled.div<IAsideProps>`\n    height: 100%;\n    padding-bottom: 70px;\n    transition: all 0.3s;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n\n    ${({ $minimize }) =>\n        $minimize &&\n        css`\n            width: 60px;\n            transition: none;\n        `}\n    ${({ $mdMinimize, $show }) =>\n        $mdMinimize &&\n        !$show &&\n        css`\n            ${device.lgToXl} {\n                width: 60px;\n                transition: none;\n            }\n        `}\n    \n    ${(props) =>\n        props.theme.name !== \"dark\" &&\n        css`\n            background-color: #fff;\n            border-right: 1px solid ${themeGet(\"colors.border\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n        `}\n`;\n\nexport const StyledBodyInner = styled.div`\n    padding: 25px;\n    position: absolute;\n    inset: 0;\n`;\n\nexport const StyledBackdrop = styled.div<IVisibleProps>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(28, 39, 60, 0.7);\n    opacity: 0;\n    z-index: 900;\n    visibility: hidden;\n    ${({ $show }) =>\n        $show &&\n        css`\n            opacity: 1;\n            visibility: visible;\n        `}\n    ${device.large} {\n        display: none;\n    }\n`;\n","import { useState, useEffect, useRef } from \"react\";\nimport cn from \"clsx\";\nimport { NavbarAside } from \"@doar/components\";\nimport { asideMenuData } from \"@doar/shared/data\";\nimport { ISize } from \"@doar/shared/types\";\nimport Header from \"../header\";\nimport Scrollbar from \"../../../components/scrollbar\";\nimport AsideUser from \"../../../components/aside-layout/user\";\nimport { useWindowSize } from \"../../../hooks\";\nimport {\n    StyledAside,\n    StyledBody,\n    StyledBodyInner,\n    StyledBackdrop,\n} from \"./style\";\n\ntype TMaxText = \"enter\" | \"leave\";\n\ninterface IProps {\n    layout?: \"minimize\";\n    sidebarLayout?: 1 | 2;\n}\n\nconst Aisde = ({ layout, sidebarLayout }: IProps) => {\n    const [minimize, setMinimize] = useState(layout === \"minimize\");\n    const [maximize, setMaximize] = useState(false);\n    const [show, setShow] = useState(false);\n    const size: ISize = useWindowSize();\n    const maximized = useRef(false);\n    const mdMinimize = useRef(true);\n\n    const minimizeHandler = () => {\n        setMinimize((prev) => !prev);\n    };\n\n    const displayHandler = () => {\n        setMinimize(false);\n        setShow((prev) => !prev);\n    };\n\n    useEffect(() => {\n        if (!size.width) return;\n        if (\n            size.width > 991 &&\n            size.width < 1200 &&\n            !show &&\n            layout !== \"minimize\"\n        ) {\n            setMinimize(true);\n        }\n        if (\n            size.width >= 1200 &&\n            maximized.current === false &&\n            layout !== \"minimize\"\n        ) {\n            setMinimize(false);\n            maximized.current = true;\n        }\n        if (size.width <= 1199) {\n            maximized.current = false;\n        }\n        if (size.width <= 991) {\n            setMinimize(false);\n        }\n    }, [size.width, show, layout]);\n\n    const maximizeHandler = (e: React.MouseEvent, text: TMaxText) => {\n        e.preventDefault();\n        if (!minimize) return;\n        if (text === \"enter\") {\n            setMaximize(true);\n        }\n        if (text === \"leave\") {\n            setMaximize(false);\n        }\n    };\n\n    const minClass = minimize ? \"minimize\" : \"\";\n    const maxClass = maximize ? \"maximize\" : \"\";\n\n    return (\n        <>\n            <StyledBackdrop $show={show} onClick={displayHandler} />\n            <StyledAside\n                className={cn(minClass, maxClass)}\n                $minimize={minimize}\n                $mdMinimize={mdMinimize.current}\n                $maximize={maximize}\n                $show={show}\n            >\n                <Header\n                    minimizeHandler={minimizeHandler}\n                    displayHandler={displayHandler}\n                    minimize={minimize}\n                    mdMinimize={mdMinimize.current}\n                    show={show}\n                    sidebarLayout={sidebarLayout}\n                />\n                <StyledBody\n                    $minimize={minimize}\n                    $mdMinimize={mdMinimize.current}\n                    $maximize={maximize}\n                    $show={show}\n                    className=\"aside-body\"\n                    onMouseEnter={(e) => maximizeHandler(e, \"enter\")}\n                    onMouseLeave={(e) => maximizeHandler(e, \"leave\")}\n                >\n                    <Scrollbar>\n                        <StyledBodyInner className=\"aside-body-inner\">\n                            <AsideUser />\n                            <NavbarAside menus={asideMenuData} />\n                        </StyledBodyInner>\n                    </Scrollbar>\n                </StyledBody>\n            </StyledAside>\n        </>\n    );\n};\n\nexport default Aisde;\n","import Aisde from \"./aside\";\n\ninterface IProps {\n    aside?: \"minimize\";\n    sidebarLayout?: 1 | 2;\n    children: React.ReactNode;\n}\n\nconst Layout = ({ children, aside, sidebarLayout }: IProps) => {\n    return (\n        <>\n            <Aisde layout={aside} sidebarLayout={sidebarLayout} />\n            {children}\n        </>\n    );\n};\n\nLayout.defaultProps = {\n    sidebarLayout: 1,\n};\n\nexport default Layout;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["StyledWrap","styled","top","bottom","rest","css","position","children","className","SEO","title","titleTemplate","description","charSet","name","content","defaultProps","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","defaultActive","activeId","setActiveId","dispatch","useAppDispatch","useWindowSize","clickHandler","e","target","targetId","classList","contains","id","closest","toggleSidebar","isOpen","StyledLogo","themeGet","device","theme","path","minimizeCSS","StyledHeader","props","$show","$minimize","$mdMinimize","tinycolor","setAlpha","toRgbString","StyledMenuBtn","StyledSidebarBtn","$sidebarOpen","$bodyOpen","minimizeHandler","displayHandler","minimize","mdMinimize","show","sidebarLayout","useAppSelector","state","ui","sidebar","isBody","sidebarHandler","useCallback","_","bodyHandler","toggleBody","menuHandler","onClick","size","strokeWidth","StyledUser","StyledAvatarWrap","StyledAlerts","StyledAlert","StyledLoggedInUser","StyledUserBtn","StyledUserData","StyledUserCollapse","place","effect","setShow","type","prev","fontWeight","mb","color","fontSize","vertical","customStyle","maximizeCSS","StyledAside","$maximize","StyledBody","StyledBodyInner","StyledBackdrop","layout","setMinimize","maximize","setMaximize","maximized","useRef","current","maximizeHandler","text","preventDefault","minClass","maxClass","cn","onMouseEnter","onMouseLeave","menus","asideMenuData","Layout","aside","r","t","f","n","Array","isArray","length","arguments"],"sourceRoot":""}