{"version":3,"file":"static/js/5032.03841b08.chunk.js","mappings":"wIAQMA,EAAM,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,YACjC,OACI,UAAC,IAAD,YACI,iBAAMC,QAAQ,WACd,6BACKH,EADL,MACeC,MAEf,iBAAMG,KAAK,cAAcC,QAASH,MAG7C,EAEDH,EAAIO,aAAe,CACfN,MAAO,OACPC,cAAe,kCACfC,YAAa,mCAGjB,K,yPCtBaK,GAAkBC,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAAiB,SAAC,MAAD,UAAeA,GAAhC,GAAPD,CAAH,sEAKfE,EAAeF,EAAAA,GAAAA,OAAH,yEAEZG,EAAAA,EAAAA,GAAS,iBAChB,SAACC,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,yDAEaH,EAAAA,EAAAA,GAAS,gBAHxB,IAOOI,EAAaP,EAAAA,GAAAA,EAAH,2EAEV,SAACI,GAAD,OACLA,IACAE,EAAAA,EAAAA,IADK,0BACCE,EAAAA,EAAAA,IAAUJ,EAAMC,MAAMI,OAAOC,MAC9BC,SAAS,KACTC,cAJA,IAKP,SAACR,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,yDAEaH,EAAAA,EAAAA,GAAS,kBAHxB,IAOOU,EAAab,EAAAA,GAAAA,KAAH,sFACVG,EAAAA,EAAAA,GAAS,iBAEHA,EAAAA,EAAAA,GAAS,kBChB5B,EAjBqB,WACjB,OACI,UAAC,KAAD,YACI,SAAC,KAAD,WACI,SAAC,KAAD,CAAQW,KAAK,KAAKC,MAAM,SAASC,OAAO,SAAxC,UACI,SAAC,KAAD,sBAGR,UAACjB,EAAD,YACI,SAACG,EAAD,+BACA,SAACK,EAAD,4CACA,SAACM,EAAD,kCAIf,E,WCHYI,IAXcX,EAAAA,EAAAA,IAAH,sNAWMN,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BACjC,SAAC,MAAD,UAAkBA,GADe,GAAPD,CAAH,yjCAcrBkB,EAAAA,GAAAA,MAGAA,EAAAA,GAAAA,OAQ8Bf,EAAAA,EAAAA,GAAS,iBAKnCe,EAAAA,GAAAA,MAcAA,EAAAA,GAAAA,OAIJ,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,oIADF,IAQA,SAACF,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,6RAM+BH,EAAAA,EAAAA,GAAS,uBAGlCe,EAAAA,GAAAA,MAVR,KAgBND,EAAeE,YAAc,eAEtB,I,sBAAMC,EAAmBpB,EAAAA,GAAAA,IAAH,+RAQhBG,EAAAA,EAAAA,GAAS,iBACSA,EAAAA,EAAAA,GAAS,kBAElC,SAACC,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,yDAEaH,EAAAA,EAAAA,GAAS,gBAHxB,IAOOkB,IAAiBrB,EAAAA,EAAAA,KAAO,SAACI,GAAD,OAAW,SAAC,MAAD,UAAYA,GAAvB,GAAPJ,CAAH,sQAUC,SAACI,GAAD,OAChBkB,EAAAA,EAAAA,IAASlB,EAAMC,MAAMI,OAAOc,MAAiB,GAD7B,IAGtB,SAACnB,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,4VAGgCH,EAAAA,EAAAA,GAAS,mBAIbK,EAAAA,EAAAA,KAChBL,EAAAA,EAAAA,GAAS,iBAATA,CAA2BC,IAE1BoB,QAAQ,GACRC,YAIKjB,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,GAAS,iBAATA,CAA2BC,IAClCoB,QAAQ,GACRC,WAlBvB,IAwBOC,GAAmB1B,EAAAA,GAAAA,IAAH,kRAEDG,EAAAA,EAAAA,GAAS,kBAQpBA,EAAAA,EAAAA,GAAS,iBAEpB,SAACC,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,qMAEoBE,EAAAA,EAAAA,KACZL,EAAAA,EAAAA,GAAS,iBAATA,CAA2BC,IAE1BuB,OAAO,IACPF,YAIYtB,EAAAA,EAAAA,GAAS,kBAXhC,IAiBOyB,GAAc5B,EAAAA,GAAAA,KAAH,iVAQAG,EAAAA,EAAAA,GAAS,kBC5IjC,GA7BwB,WACpB,OACI,UAAC,KAAD,CAAU0B,UAAU,OAApB,WACI,UAAC,KAAD,CAAgBC,QAAQ,SAAxB,WACI,SAAC,IAAD,CAAeC,UAAU,iBACzB,SAACH,GAAD,oBAEJ,UAACX,EAAD,YACI,SAACG,EAAD,iCACA,SAACC,GAAD,CAAgBW,KAAK,aAArB,UACI,SAAC,EAAD,OAEJ,SAACX,GAAD,CAAgBW,KAAK,aAArB,UACI,SAAC,EAAD,OAEJ,SAACX,GAAD,CAAgBW,KAAK,aAArB,UACI,SAAC,EAAD,OAEJ,SAACX,GAAD,CAAgBW,KAAK,aAArB,UACI,SAAC,EAAD,OAEJ,SAACN,GAAD,WACI,SAAC,KAAD,CAAMO,GAAG,aAAT,sCAKnB,E,YCED,GA7B6B,WACzB,OACI,UAAC,KAAD,CAAUJ,UAAU,OAApB,WACI,UAAC,KAAD,CAAgBC,QAAQ,SAAxB,WACI,SAAC,KAAD,CAAMC,UAAU,iBAChB,SAACH,GAAD,oBAEJ,UAACX,EAAD,YACI,SAACG,EAAD,6BACA,SAACC,GAAD,CAAgBW,KAAK,gBAArB,UACI,SAAC,EAAD,OAEJ,SAACX,GAAD,CAAgBW,KAAK,gBAArB,UACI,SAAC,EAAD,OAEJ,SAACX,GAAD,CAAgBW,KAAK,gBAArB,UACI,SAAC,EAAD,OAEJ,SAACX,GAAD,CAAgBW,KAAK,gBAArB,UACI,SAAC,EAAD,OAEJ,SAACN,GAAD,WACI,SAAC,KAAD,CAAMO,GAAG,gBAAT,2CAKnB,E,8FC9BYhB,IAAiBjB,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BACjC,SAAC,MAAD,UAAkBA,GADe,GAAPD,CAAH,8lCAMPG,EAAAA,EAAAA,GAAS,iBAUvBe,EAAAA,GAAAA,OAQ8Bf,EAAAA,EAAAA,GAAS,iBAKnCe,EAAAA,GAAAA,MAcAA,EAAAA,GAAAA,OAIJ,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,gEADF,IAKA,SAACF,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,sNAM+BH,EAAAA,EAAAA,GAAS,uBAP1C,IAaO+B,IAAelC,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAAiB,SAAC,MAAD,UAAYA,GAA7B,GAAPD,CAAH,sHAGGG,EAAAA,EAAAA,GAAS,mBAC3B,kBACiB,SADjB,EAAGE,MACKT,OACNU,EAAAA,EAAAA,IADA,wEAEoBH,EAAAA,EAAAA,GAAS,kBAH/B,IAQVc,GAAeE,YAAc,eAEtB,I,mJAAMgB,GAAmBnC,EAAAA,GAAAA,GAAH,+FAMhBoC,GAAmBpC,EAAAA,GAAAA,EAAH,yFAEhBG,EAAAA,EAAAA,GAAS,iBAITkB,IAAiBrB,EAAAA,EAAAA,KAAO,cAAGqC,GAAH,IAAUpC,GAAV,qBAAqB,SAAC,MAAD,UAAYA,GAAjC,GAAPD,CAAH,ybAIdG,EAAAA,EAAAA,GAAS,iBAehB,kBACiB,SADjB,EAAGE,MACKT,OACNU,EAAAA,EAAAA,IADA,yDAEaH,EAAAA,EAAAA,GAAS,kBAHxB,GAKAmC,EAAAA,IAGOC,GAAgBvC,EAAAA,GAAAA,IAAH,6HAGEG,EAAAA,EAAAA,GAAS,mBAE/B,SAACC,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,gEAEoBE,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,GAAS,eAATA,CAAyBC,IAC9CO,SAAS,KACTC,cALX,IC1DN,GAnDwB,WACpB,OACI,UAAC,KAAD,CAAUiB,UAAU,OAAOE,UAAU,mBAArC,WACI,SAAC,KAAD,CAAgBD,QAAQ,SAAxB,UACI,SAACI,GAAD,CAAcpB,KAAK,KAAKC,MAAM,SAA9B,UACI,SAAC,KAAD,sBAGR,UAAC,GAAD,YACI,SAAC,KAAD,CAAQD,KAAK,KAAKC,MAAM,SAAxB,UACI,SAAC,KAAD,oBAEJ,SAACoB,GAAD,gCACA,SAACC,GAAD,6BACA,UAAC,GAAD,CAAgBJ,KAAK,gBAArB,WACI,SAAC,KAAD,CAAOlB,KAAK,OADhB,mBAIA,UAAC,GAAD,CAAgBkB,KAAK,gBAAgBK,GAAG,OAAxC,WACI,SAAC,KAAD,CAAMvB,KAAK,OADf,mBAIA,SAACyB,GAAD,KACA,UAAC,GAAD,CACIP,KAAK,oCACLK,GAAG,OAFP,WAII,SAAC,KAAD,CAAYvB,KAAK,OAJrB,kBAOA,UAAC,GAAD,CAAgBkB,KAAK,IAAIK,GAAG,OAA5B,WACI,SAAC,KAAD,CAAUvB,KAAK,OADnB,YAIA,UAAC,GAAD,CAAgBkB,KAAK,gBAAgBK,GAAG,OAAxC,WACI,SAAC,KAAD,CAAUvB,KAAK,OADnB,uBAIA,UAAC,GAAD,CAAgBkB,KAAK,gBAAgBK,GAAG,OAAxC,WACI,SAAC,KAAD,CAAUvB,KAAK,OADnB,uBAIA,UAAC,GAAD,CAAgBkB,KAAK,UAAUK,GAAG,OAAlC,WACI,SAAC,KAAD,CAAQvB,KAAK,OADjB,mBAOf,EChEY0B,GAAexC,EAAAA,GAAAA,IAAH,0QAOD,SAACI,GAAD,OAChBkB,EAAAA,EAAAA,IAASlB,EAAMC,MAAMI,OAAOgC,OAAkB,GAD9B,IAMlB,mBACc,IADd,EAAGC,UAEDpC,EAAAA,EAAAA,IADA,4FADF,IAQOqC,GAAqB3C,EAAAA,GAAAA,IAAH,ySAMAG,EAAAA,EAAAA,GAAS,iBAClCe,EAAAA,GAAAA,MAIAA,EAAAA,GAAAA,OAGA,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,2GAEwBH,EAAAA,EAAAA,GAAS,kBAHnC,IAkDOyC,KA1CoB5C,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAAiB,SAAC,MAAD,UAAWA,GAA5B,GAAPD,CAAH,ioBAIjBG,EAAAA,EAAAA,GAAS,eAKZe,EAAAA,GAAAA,MAMAA,EAAAA,GAAAA,MAMAA,EAAAA,GAAAA,MAIJA,EAAAA,GAAAA,OAKWf,EAAAA,EAAAA,GAAS,gBAEpB,SAACC,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,sIADF,KAUyBN,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAAiB,SAAC,MAAD,UAAYA,GAA7B,GAAPD,CAAH,2JAOtB,SAACI,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,qJAEaH,EAAAA,EAAAA,GAAS,kBAHxB,KAWO0C,IAAoB7C,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAAiB,SAAC,MAAD,UAAYA,GAA7B,GAAPD,CAAH,2JACjBG,EAAAA,EAAAA,GAAS,iBAGLA,EAAAA,EAAAA,GAAS,eAEpBe,EAAAA,GAAAA,OAKO4B,GAAmB9C,EAAAA,GAAAA,IAAH,uKAIvBkB,EAAAA,GAAAA,OAGA,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,6WAEwBH,EAAAA,EAAAA,GAAS,uBAEhBA,EAAAA,EAAAA,GAAS,mBACFA,EAAAA,EAAAA,GAAS,mBAGDA,EAAAA,EAAAA,GAAS,kBAT3C,IAiBO4C,GAAoB/C,EAAAA,GAAAA,GAAH,8KAKjBG,EAAAA,EAAAA,GAAS,iBAIT6C,GAAgBhD,EAAAA,GAAAA,GAAH,8LAMpBkB,EAAAA,GAAAA,OAKO+B,GAAoBjD,EAAAA,GAAAA,GAAH,4KAGpBkB,EAAAA,GAAAA,OAOGgC,GAAelD,EAAAA,GAAAA,EAAH,iVAGZG,EAAAA,EAAAA,GAAS,gBAEhBe,EAAAA,GAAAA,OACsBf,EAAAA,EAAAA,GAAS,kBAITA,EAAAA,EAAAA,GAAS,gBAC3Be,EAAAA,GAAAA,OACsBf,EAAAA,EAAAA,GAAS,iBAM5BgD,GAAmBnD,EAAAA,GAAAA,GAAH,yHAITG,EAAAA,EAAAA,GAAS,kBC1H7B,GAxDkB,SAAC,GAAiC,IAA/BiD,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QACzB,OACI,UAACb,GAAD,CAAcE,QAASU,EAAvB,WACI,UAACT,GAAD,YACI,SAAC,KAAD,CACIW,KAAK,SACLC,GAAG,aACH3D,KAAK,aACL4D,YAAY,kCACZC,YAAY,WACZC,SAAU,CAAC,OAAQ,KAAM,KAAM,WAEnC,SAACd,GAAD,CAAiBd,QAAQ,SAAS6B,MAAM,QAAxC,UACI,SAAC,IAAD,OAEJ,SAACd,GAAD,CAAmBf,QAAQ,SAAS8B,QAASP,EAA7C,UACI,SAAC,IAAD,UAGR,UAACP,GAAD,YACI,SAACC,GAAD,+BACA,UAACC,GAAD,YACI,SAACC,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,iCAEJ,SAACZ,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,6BAEJ,SAACZ,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,+BAEJ,SAACZ,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,0BAGR,SAACV,GAAD,KACA,SAACJ,GAAD,kCACA,UAACC,GAAD,YACI,SAACC,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,+BAEJ,SAACZ,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,8BAEJ,SAACZ,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,8BAEJ,SAACZ,GAAD,WACI,SAACC,GAAD,CAAcW,KAAK,IAAnB,mCAMvB,ECvEYC,IAAa9D,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAAiB,SAAC,MAAD,UAAYA,GAA7B,GAAPD,CAAH,0aAQVG,EAAAA,EAAAA,GAAS,gBAKLA,EAAAA,EAAAA,GAAS,kBAEpBe,EAAAA,GAAAA,MAGAA,EAAAA,GAAAA,OAGA,kBACiB,SADjB,EAAGb,MACKT,OACNU,EAAAA,EAAAA,IADA,2DAEaH,EAAAA,EAAAA,GAAS,gBAHxB,ICdN,GARa,WACT,OACI,UAAC2D,GAAD,CAAY9B,KAAK,IAAjB,gBACM,mCAGb,E,iDCEY+B,GAAe/D,EAAAA,GAAAA,OAAH,6fAYMG,EAAAA,EAAAA,GAAS,iBAClCe,EAAAA,GAAAA,OAQA,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,iIAE2BE,EAAAA,EAAAA,KACnBL,EAAAA,EAAAA,GAAS,kBAATA,CAA4BC,IAE3BoB,QAAQ,IACRC,YAECjB,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,GAAS,kBAATA,CAA4BC,IACnCO,SAAS,IACTC,cAXf,IAaA,SAACR,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,2GAEwBH,EAAAA,EAAAA,GAAS,kBAHnC,IAQO2D,GAAa9D,EAAAA,GAAAA,IAAH,qXAYjBkB,EAAAA,GAAAA,OAUO8C,GAAmBhE,EAAAA,GAAAA,IAAH,0xBAcL,SAACI,GAAD,OAChBA,IACAE,EAAAA,EAAAA,IADK,mDAECE,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,GAAS,gBAATA,CAA0BC,IACjCO,SAAS,IACTC,cALO,IAQlB,mBACc,IADd,EAAG8B,UAEDpC,EAAAA,EAAAA,IADA,4FADF,GAMAY,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,OAoBO+C,GAAmBjE,EAAAA,GAAAA,IAAH,4fAQvB,mBACc,IADd,EAAG0C,UAEDpC,EAAAA,EAAAA,IADA,wEADF,GAKAY,EAAAA,GAAAA,OAWA,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,sEADF,IAKA,SAACF,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,wJAEwBH,EAAAA,EAAAA,GAAS,uBAC3Be,EAAAA,GAAAA,MAJR,IAUOgD,GAAqBlE,EAAAA,GAAAA,IAAH,wNAMzBkB,EAAAA,GAAAA,OAGA,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,6EAE+BH,EAAAA,EAAAA,GAAS,iBAH1C,IAKA,SAACC,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,EAAAA,IADA,4NAEwBH,EAAAA,EAAAA,GAAS,mBAKZA,EAAAA,EAAAA,GAAS,gBARhC,IAcOgE,GAAmBnE,EAAAA,GAAAA,IAAH,4GAEvBkB,EAAAA,GAAAA,OAMOkD,GAAoBpE,EAAAA,GAAAA,GAAH,6RAGXG,EAAAA,EAAAA,GAAS,kBAEfA,EAAAA,EAAAA,GAAS,gBAKhBe,EAAAA,GAAAA,OAKOmD,GAAmBrE,EAAAA,GAAAA,IAAH,gRAOvBkB,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,OAMOoD,IAAsBtE,EAAAA,EAAAA,KAAO,cAAGqC,GAAH,EAAOkC,GAAP,EAAWC,GAAX,EAAeC,GAAf,IAAsBrE,GAAtB,qBACtC,0BAASA,GAD6B,GAAPJ,CAAH,+RAG1BsC,EAAAA,GACAoC,EAAAA,GAMIxD,EAAAA,GAAAA,OAKA,kBACiB,SADjB,EAAGb,MACKT,OACNU,EAAAA,EAAAA,IADA,mEAEaH,EAAAA,EAAAA,GAAS,eAHxB,IAKA,kBACiB,SADjB,EAAGE,MACKT,OACNU,EAAAA,EAAAA,IADA,4KAEaH,EAAAA,EAAAA,GAAS,mBAGLA,EAAAA,EAAAA,GAAS,gBAN5B,IAkBGwE,IAAgB3E,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BAChC,SAAC,MAAD,UAAYA,GADoB,GAAPD,CAAH,kLAKTG,EAAAA,EAAAA,GAAS,iBAGpB,mBACkB,IADlB,EAAGyE,cAEDtE,EAAAA,EAAAA,IADA,6DADF,IAMA,gBAAGuE,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAjB,OACmB,IAAjBD,IACCC,IACDxE,EAAAA,EAAAA,IAFA,oGAGMY,EAAAA,GAAAA,OAJR,IASA,gBAAG2D,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAjB,OACmB,IAAjBD,IACCC,IACDxE,EAAAA,EAAAA,IAFA,8DADF,IAMH,gBAAGwE,EAAH,EAAGA,UAAWD,EAAd,EAAcA,aAAd,OACmB,IAAdC,IACiB,IAAjBD,IACAvE,EAAAA,EAAAA,IAFA,6DADL,GAMAY,EAAAA,GAAAA,OAGG,kBACiB,SADjB,EAAGb,MACKT,OACNU,EAAAA,EAAAA,IADA,qGAGiBH,EAAAA,EAAAA,GAAS,gBAJ5B,IASO4E,IAAmB/E,EAAAA,EAAAA,KAAO,gBAAMC,EAAN,2BACnC,SAAC,MAAD,UAAYA,GADuB,GAAPD,CAAH,uNAKZG,EAAAA,EAAAA,GAAS,gBAEpBe,EAAAA,GAAAA,MAGAA,EAAAA,GAAAA,OAGA,gBAAG2D,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAjB,OACmB,IAAjBD,IACCC,IACDxE,EAAAA,EAAAA,IAFA,mGAGMY,EAAAA,GAAAA,OAJR,IASA,gBAAG2D,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAjB,OACmB,IAAjBD,IACCC,IACDxE,EAAAA,EAAAA,IAFA,6DADF,IAMA,gBAAGwE,EAAH,EAAGA,UAAWD,EAAd,EAAcA,aAAd,OACgB,IAAdC,IACiB,IAAjBD,IACAvE,EAAAA,EAAAA,IAFA,8DADF,IAMA,kBACiB,SADjB,EAAGD,MACKT,OACNU,EAAAA,EAAAA,IADA,qGAGiBH,EAAAA,EAAAA,GAAS,gBAJ5B,IC/TA6E,GAAS,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,cACpBC,GAAWC,EAAAA,GAAAA,KACjB,GAA4BC,EAAAA,GAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,EAAjB,IAAnCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAgBC,EAAAA,EAAAA,cAAY,WAC9BF,GAAc,SAACG,GAAD,OAAWA,CAAX,GACjB,GAAE,IAEH,GAAgCL,EAAAA,EAAAA,WAAS,GAAzC,eAAOM,EAAP,KAAiBC,EAAjB,KACMC,GAAiBJ,EAAAA,EAAAA,cACnB,SAACK,EAAQ/C,GACL+B,GAASiB,EAAAA,GAAAA,IAAc,CAAEhD,OAAAA,IAC5B,GACD,CAAC+B,IAGCkB,GAAcP,EAAAA,EAAAA,cAAY,WAC5BX,GAASmB,EAAAA,GAAAA,OACTnB,GAASiB,EAAAA,GAAAA,IAAc,CAAEhD,OAAQ,SACpC,GAAE,CAAC+B,IAEEoB,GAAcT,EAAAA,EAAAA,cAAY,WAC5BG,GAAY,SAACF,GAAD,OAAWA,CAAX,IACRC,GACAE,OAAeM,EAAW,OAEjC,GAAE,CAACR,EAAUE,IASd,OAPAO,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHP,OAAeM,EAAW,QAC1BH,GACH,CACJ,GAAE,CAACH,EAAgBG,KAGhB,iCACI,UAACtC,GAAD,WACKkB,GAAgC,IAAlBC,IACX,iCACI,SAACP,GAAD,CACI7C,QAAQ,SACR8B,QAAS2C,EACT3B,YAAaK,EACbJ,aAAcW,EACdV,UAAWW,EACX1D,UAAU,WANd,UAQI,SAAC,IAAD,CAAMjB,KAAM,GAAI4F,YAAY,aAEhC,SAAC3B,GAAD,CACIjD,QAAQ,SACR8B,QAAU6B,EAA0BY,EAAjBH,EACnBrB,aAAcW,EACdV,UAAWW,EACX1D,UAAU,cALd,UAOI,SAAC,IAAD,CAAWjB,KAAM,GAAI4F,YAAY,eAI5CzB,GAAgC,IAAlBC,IACX,iCACI,SAACP,GAAD,CACI7C,QAAQ,SACR8B,QAAS2C,EACT3B,YAAaK,EACbJ,cAAeW,EACfV,WAAW,EALf,UAOI,SAAC,IAAD,CAAMhE,KAAM,GAAI4F,YAAY,aAEhC,SAAC3B,GAAD,CACIjD,QAAQ,SACR8B,QAASsC,EACTrB,cAAeW,EACfV,WAAW,EAJf,UAMI,SAAC,IAAD,CAAWhE,KAAM,GAAI4F,YAAY,gBAI3CzB,IACE,SAACN,GAAD,CACI7C,QAAQ,SACR8B,QAAS2C,EACT3B,YAAaK,EACbJ,cAAeW,EAJnB,UAMI,SAAC,IAAD,CAAM1E,KAAM,GAAI4F,YAAY,aAGpC,SAAC,GAAD,WACI,SAAC,GAAD,OAEJ,SAAC1C,GAAD,CACItB,QAASsD,EACTpC,QAAS2C,EACTxE,UAAU,cAHd,UAKI,UAACkC,GAAD,CACIvB,QAASsD,EACTpC,QAAS,SAAC+C,GAAD,OAAOA,EAAEC,iBAAT,EAFb,WAII,UAAC1C,GAAD,YACI,SAAC,GAAD,KACA,SAAC,KAAD,CAAQpC,QAAQ,SAAS8B,QAAS2C,EAAlC,UACI,SAAC,IAAD,CACI5C,MAAM,UACNkD,MAAO,GACPH,YAAY,gBAIxB,UAACvC,GAAD,YACI,SAACC,GAAD,+BAGA,SAAC,KAAD,CAAQ0C,MAAOC,EAAAA,cAI3B,UAAC1C,GAAD,YACI,SAACC,GAAD,WACI,SAAC,KAAD,CACIxC,QAAQ,SACR8B,QAASiC,EACT9D,UAAU,aAHd,UAKI,SAAC,IAAD,CAAQA,UAAU,qBAG1B,SAACuC,GAAD,CAAqBE,GAAI,CAAC,MAAO,QAAjC,UACI,SAAC,GAAD,OAEJ,SAACF,GAAD,CAAqBE,GAAI,CAAC,MAAO,QAAjC,UACI,SAAC,GAAD,OAEJ,SAACF,GAAD,CAAqBE,GAAI,CAAC,OAAQ,OAAQ,QAA1C,UACI,SAAC,GAAD,aAIZ,SAAC,GAAD,CAAWpB,OAAQuC,EAAYtC,QAASwC,MAGnD,EAEDb,GAAOlF,aAAe,CAClBoF,cAAe,GAGnB,I,qBAAA,M,wBCnLa8B,GAAehH,GAAAA,GAAAA,OAAH,kZAENG,EAAAA,GAAAA,GAAS,kBAGJA,EAAAA,GAAAA,GAAS,kBACpBA,EAAAA,GAAAA,GAAS,mBACMA,EAAAA,GAAAA,GAAS,iBAE/Be,GAAAA,GAAAA,OAMA,SAACd,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,GAAAA,IADA,sIAIUE,EAAAA,GAAAA,KAAUL,EAAAA,GAAAA,GAAS,kBAATA,CAA4BC,IACnCO,SAAS,IACTC,cAPf,IASA,SAACR,GAAD,MACuB,SAArBA,EAAMC,MAAMT,OACZU,EAAAA,GAAAA,IADA,iRAEwBH,EAAAA,GAAAA,GAAS,mBAIhBA,EAAAA,GAAAA,GAAS,kBAP5B,IAgBO8G,GAAmBjH,GAAAA,GAAAA,IAAH,mXAEvBkB,GAAAA,GAAAA,QAKWf,EAAAA,GAAAA,GAAS,iBAWTA,EAAAA,GAAAA,GAAS,kBAKb+G,GAAoBlH,GAAAA,GAAAA,IAAH,wBAEjBmH,GAAkBnH,GAAAA,GAAAA,IAAH,wIAQfoH,IAAsBpH,EAAAA,GAAAA,KAAO,gBAAMC,EAAN,2BACtC,SAAC,MAAD,UAAYA,GAD0B,GAAPD,CAAH,4LAInBG,EAAAA,GAAAA,GAAS,iBAMLA,EAAAA,GAAAA,GAAS,mBC7C1B,GAjCe,WACX,OACI,UAAC6G,GAAD,YACI,SAACE,GAAD,WACI,UAACC,GAAD,YACI,SAACC,GAAD,CAAqBpF,KAAK,4CAA1B,uBAGA,SAACoF,GAAD,CAAqBpF,KAAK,IAA1B,yBAGA,SAACoF,GAAD,CAAqBpF,KAAK,oCAA1B,4BAKR,UAACiF,GAAD,YACI,0CAAmB,IAAII,MAAOC,cAA9B,QACA,kBAAMvF,UAAU,gBAAhB,wBACc,SAAC,KAAD,CAAOjB,KAAK,OAD1B,MACqC,MACjC,cACI+C,KAAK,oDACL0D,OAAO,SACPC,IAAI,sBAHR,gCAWnB,EC7BKC,GAAS,SAAC,GAKD,IAJXC,EAIU,EAJVA,SACAzC,EAGU,EAHVA,WACA0C,EAEU,EAFVA,WACAzC,EACU,EADVA,cAEA,OACI,iCACI,SAAC,GAAD,CAAQD,WAAYA,EAAYC,cAAeA,IAC9CwC,GACCC,IAAc,SAAC,GAAD,MAG3B,EAEDF,GAAO3H,aAAe,CAClB6H,YAAY,GAGhB,S","sources":["components/seo.tsx","components/header/dropdown-item/style.tsx","components/header/dropdown-item/index.tsx","components/header/header-dropdown-elements/style.tsx","components/header/message-dropdown/index.tsx","components/header/notification-dropdown/index.tsx","components/header/profile-dropdown/style.tsx","components/header/profile-dropdown/index.tsx","components/header/nav-search/style.tsx","components/header/nav-search/index.tsx","components/logo/style.tsx","components/logo/index.tsx","layouts/header/style.tsx","layouts/header/index.tsx","layouts/footer/style.tsx","layouts/footer/index.tsx","layouts/index.tsx"],"sourcesContent":["import { Helmet } from \"react-helmet\";\n\ninterface IProps {\n    title?: string;\n    titleTemplate?: string;\n    description?: string;\n}\n\nconst SEO = ({ title, titleTemplate, description }: IProps) => {\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>\n                {title} - {titleTemplate}\n            </title>\n            <meta name=\"description\" content={description} />\n        </Helmet>\n    );\n};\n\nSEO.defaultProps = {\n    title: \"Doar\",\n    titleTemplate: \"Responsive React Admin Template\",\n    description: \"Responsive React Admin Template\",\n};\n\nexport default SEO;\n","/* eslint-disable react/react-in-jsx-scope */\nimport styled, { themeGet, css, tinycolor } from \"@doar/shared/styled\";\nimport { MediaBody } from \"@doar/components\";\n\nexport const StyledMediaBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n    margin-left: 15px;\n    font-size: 13px;\n`;\n\nexport const StyledStrong = styled.strong`\n    font-weight: 500;\n    color: ${themeGet(\"colors.text2\")};\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n\nexport const StyledText = styled.p`\n    margin-bottom: 2px;\n    color: ${(props) =>\n        props &&\n        css`${tinycolor(props.theme.colors.text as string)\n            .setAlpha(0.85)\n            .toRgbString()}}`};\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n`;\n\nexport const StyledSpan = styled.span`\n    color: ${themeGet(\"colors.text3\")};\n    font-size: 11px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n`;\n","import { Media, MediaLeft, Avatar, AvatarInitial } from \"@doar/components\";\nimport { StyledMediaBody, StyledStrong, StyledText, StyledSpan } from \"./style\";\n\nconst DropdownItem = () => {\n    return (\n        <Media>\n            <MediaLeft>\n                <Avatar size=\"sm\" shape=\"circle\" status=\"online\">\n                    <AvatarInitial>df</AvatarInitial>\n                </Avatar>\n            </MediaLeft>\n            <StyledMediaBody>\n                <StyledStrong>Socrates Itumay</StyledStrong>\n                <StyledText>nam libero tempore cum so...</StyledText>\n                <StyledSpan>Mar 15 12:32pm</StyledSpan>\n            </StyledMediaBody>\n        </Media>\n    );\n};\n\nexport default DropdownItem;\n","import styled, { device, themeGet, css, tinycolor } from \"@doar/shared/styled\";\nimport { hexTorgb } from \"@doar/shared/methods\";\nimport { DropdownMenu, Anchor } from \"@doar/components\";\n\nexport const DropmenuCSS = css`\n    padding: 0;\n    margin-right: -20px;\n    box-shadow: none;\n    right: 0;\n    left: auto;\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n`;\n\nexport const StyledDropMenu = styled(({ ...rest }) => (\n    <DropdownMenu {...rest} />\n))`\n    width: 300px;\n    padding: 0;\n    margin-right: -20px;\n    box-shadow: none;\n    right: 0;\n    left: auto;\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    margin-top: 17.5px;\n    margin-right: -75px;\n    ${device.small} {\n        margin-right: -20px;\n    }\n    ${device.large} {\n        margin-top: 19.5px;\n    }\n    &:before {\n        content: \"\";\n        position: absolute;\n        top: -10px;\n        left: 25px;\n        border-bottom: 10px solid ${themeGet(\"colors.border\")};\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        left: auto;\n        right: 72px;\n        ${device.small} {\n            right: 20px;\n        }\n    }\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: -8.5px;\n        left: 26px;\n        border-bottom: 9px solid #fff;\n        border-left: 9px solid transparent;\n        border-right: 9px solid transparent;\n        left: auto;\n        right: 73px;\n        ${device.small} {\n            right: 21px;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            &:before {\n                opacity: 0;\n            }\n            margin-top: 18.5px;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            &::before {\n                opacity: 0;\n            }\n            &::after {\n                border-bottom-color: ${themeGet(\"colors.darklighten5\")};\n            }\n            margin-top: 16.5px;\n            ${device.large} {\n                margin-top: 19px;\n            }\n        `}\n`;\n\nStyledDropMenu.displayName = \"DropdownMenu\";\n\nexport const StyledDropHeader = styled.div`\n    display: block;\n    white-space: nowrap;\n    padding: 12px 15px;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 600;\n    letter-spacing: 0.5px;\n    color: ${themeGet(\"colors.text2\")};\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    margin-bottom: 5px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n\nexport const StyledDropItem = styled((props) => <Anchor {...props} />)`\n    transition: none;\n    border-radius: 0.25rem;\n    white-space: normal;\n    padding: 8px 10px;\n    margin: 0 5px;\n    width: auto;\n    display: block;\n    &:hover,\n    &:focus {\n        background-color: ${(props) =>\n            hexTorgb(props.theme.colors.light as string, 0.5)};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n            &:hover,\n            &:focus {\n                background-color: ${tinycolor(\n                    themeGet(\"colors.gray900\")(props) as string\n                )\n                    .lighten(5)\n                    .toString()};\n\n                .avatar::after {\n                    box-shadow: 0 0 0 2px\n                        ${tinycolor(themeGet(\"colors.gray900\")(props) as string)\n                            .lighten(5)\n                            .toString()};\n                }\n            }\n        `}\n`;\n\nexport const StyledDropFooter = styled.div`\n    margin-top: 5px;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    padding: 10px;\n    text-align: center;\n    font-size: 10px;\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    a {\n        color: ${themeGet(\"colors.text3\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: ${tinycolor(\n                themeGet(\"colors.gray100\")(props) as string\n            )\n                .darken(70)\n                .toString()};\n            &:hover,\n            &:focus {\n                a {\n                    color: ${themeGet(\"colors.primary\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledBadge = styled.span`\n    display: flex;\n    width: 15px;\n    height: 15px;\n    justify-content: center;\n    position: absolute;\n    top: -5px;\n    right: -2px;\n    background-color: ${themeGet(\"colors.danger\")};\n    color: #fff;\n    font-size: 8px;\n    font-weight: 400;\n    font-family: sans-serif;\n    line-height: 2;\n    border-radius: 100%;\n`;\n","import { Link } from \"react-router-dom\";\nimport { MessageSquare } from \"react-feather\";\nimport { DropdownToggle, Dropdown } from \"@doar/components\";\nimport Notification from \"../dropdown-item\";\nimport {\n    StyledDropMenu,\n    StyledDropHeader,\n    StyledDropItem,\n    StyledDropFooter,\n    StyledBadge,\n} from \"../header-dropdown-elements\";\n\nconst MessageDropdown = () => {\n    return (\n        <Dropdown direction=\"down\">\n            <DropdownToggle variant=\"texted\">\n                <MessageSquare className=\"header-icon\" />\n                <StyledBadge>5</StyledBadge>\n            </DropdownToggle>\n            <StyledDropMenu>\n                <StyledDropHeader>View all Messages</StyledDropHeader>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropFooter>\n                    <Link to=\"/apps/chat\">View all Messages</Link>\n                </StyledDropFooter>\n            </StyledDropMenu>\n        </Dropdown>\n    );\n};\n\nexport default MessageDropdown;\n","import { Link } from \"react-router-dom\";\nimport { Bell } from \"react-feather\";\nimport { DropdownToggle, Dropdown } from \"@doar/components\";\nimport Notification from \"../dropdown-item\";\nimport {\n    StyledDropMenu,\n    StyledDropHeader,\n    StyledDropItem,\n    StyledDropFooter,\n    StyledBadge,\n} from \"../header-dropdown-elements\";\n\nconst NotificationDropdown = () => {\n    return (\n        <Dropdown direction=\"down\">\n            <DropdownToggle variant=\"texted\">\n                <Bell className=\"header-icon\" />\n                <StyledBadge>2</StyledBadge>\n            </DropdownToggle>\n            <StyledDropMenu>\n                <StyledDropHeader>NOTIFICATIONS</StyledDropHeader>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropFooter>\n                    <Link to=\"/profile-view\">View all Notifications</Link>\n                </StyledDropFooter>\n            </StyledDropMenu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n","import styled, {\n    device,\n    themeGet,\n    css,\n    space,\n    tinycolor,\n} from \"@doar/shared/styled\";\nimport { DropdownMenu, Anchor, Avatar } from \"@doar/components\";\n\nexport const StyledDropMenu = styled(({ ...rest }) => (\n    <DropdownMenu {...rest} />\n))`\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-color: ${themeGet(\"colors.border\")};\n    width: 230px;\n    padding: 25px;\n    margin-top: 11.5px;\n    box-shadow: none;\n    border-bottom-right-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n    margin-right: -10px;\n    right: 0;\n    left: auto;\n    ${device.large} {\n        margin-top: 14.5px;\n    }\n    &:before {\n        content: \"\";\n        position: absolute;\n        top: -10px;\n        left: 25px;\n        border-bottom: 10px solid ${themeGet(\"colors.border\")};\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        left: auto;\n        right: 20px;\n        ${device.small} {\n            right: 20px;\n        }\n    }\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: -8.5px;\n        left: 26px;\n        border-bottom: 9px solid #fff;\n        border-left: 9px solid transparent;\n        border-right: 9px solid transparent;\n        left: auto;\n        right: 21px;\n        ${device.small} {\n            right: 21px;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            margin-top: 13.5px;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            &::before {\n                opacity: 0;\n            }\n            &::after {\n                border-bottom-color: ${themeGet(\"colors.darklighten5\")};\n            }\n            margin-top: 14px;\n        `}\n`;\n\nexport const StyledAvatar = styled(({ ...rest }) => <Avatar {...rest} />)`\n    transition: all 0.3s;\n    &:hover {\n        border: 2px solid ${themeGet(\"colors.gray300\")};\n        ${({ theme }) =>\n            theme.name === \"dark\" &&\n            css`\n                border-color: ${themeGet(\"colors.gray800\")};\n            `}\n    }\n`;\n\nStyledDropMenu.displayName = \"DropdownMenu\";\n\nexport const StyledAuthorName = styled.h6`\n    font-weight: 600;\n    margin-bottom: 5px;\n    margin-top: 15px;\n`;\n\nexport const StyledAuthorRole = styled.p`\n    font-size: 12px;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 25px;\n`;\n\nexport const StyledDropItem = styled(({ mt, ...rest }) => <Anchor {...rest} />)`\n    padding: 0;\n    display: flex;\n    align-items: center;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    transition: all 0.2s ease-in-out;\n    white-space: nowrap;\n    background-color: transparent;\n    border: 0;\n    clear: both;\n    font-weight: 400;\n    width: 100%;\n    font-size: 13px;\n    svg {\n        width: 16px;\n        height: 16px;\n        margin-right: 15px;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n    ${space}\n`;\n\nexport const StyledDivider = styled.div`\n    height: 0;\n    overflow: hidden;\n    border-top: 1px solid ${themeGet(\"colors.gray200\")};\n    margin: 15px 0;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: ${tinycolor(themeGet(\"colors.white\")(props) as string)\n                .setAlpha(0.06)\n                .toRgbString()};\n        `}\n`;\n","import {\n    Edit3,\n    User,\n    HelpCircle,\n    LifeBuoy,\n    Settings,\n    LogOut,\n} from \"react-feather\";\nimport {\n    DropdownToggle,\n    Dropdown,\n    Avatar,\n    AvatarInitial,\n} from \"@doar/components\";\nimport {\n    StyledDropMenu,\n    StyledAuthorName,\n    StyledAuthorRole,\n    StyledDropItem,\n    StyledDivider,\n    StyledAvatar,\n} from \"./style\";\n\nconst ProfileDropdown = () => {\n    return (\n        <Dropdown direction=\"down\" className=\"dropdown-profile\">\n            <DropdownToggle variant=\"texted\">\n                <StyledAvatar size=\"sm\" shape=\"circle\">\n                    <AvatarInitial>df</AvatarInitial>\n                </StyledAvatar>\n            </DropdownToggle>\n            <StyledDropMenu>\n                <Avatar size=\"lg\" shape=\"circle\">\n                    <AvatarInitial>df</AvatarInitial>\n                </Avatar>\n                <StyledAuthorName>Katherine Pechon</StyledAuthorName>\n                <StyledAuthorRole>Administrator</StyledAuthorRole>\n                <StyledDropItem path=\"/profile-view\">\n                    <Edit3 size=\"24\" />\n                    Edit Profile\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\" mt=\"10px\">\n                    <User size=\"24\" />\n                    View Profile\n                </StyledDropItem>\n                <StyledDivider />\n                <StyledDropItem\n                    path=\"https://hasthemes.com/contact-us/\"\n                    mt=\"10px\"\n                >\n                    <HelpCircle size=\"24\" />\n                    Help Center\n                </StyledDropItem>\n                <StyledDropItem path=\"/\" mt=\"10px\">\n                    <LifeBuoy size=\"24\" />\n                    Forum\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\" mt=\"10px\">\n                    <Settings size=\"24\" />\n                    Account Settings\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\" mt=\"10px\">\n                    <Settings size=\"24\" />\n                    Privacy Settings\n                </StyledDropItem>\n                <StyledDropItem path=\"/signin\" mt=\"10px\">\n                    <LogOut size=\"24\" />\n                    Sign Out\n                </StyledDropItem>\n            </StyledDropMenu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Button, Input } from \"@doar/components\";\nimport { hexTorgb } from \"@doar/shared/methods\";\n\ninterface INavSearch {\n    $isOpen: boolean;\n}\n\nexport const StyledSearch = styled.div<INavSearch>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${(props) =>\n        hexTorgb(props.theme.colors.vulcan as string, 0.7)};\n    z-index: 99999;\n    visibility: hidden;\n    opacity: 0;\n    transition: all 0.2s ease-in-out;\n    ${({ $isOpen }) =>\n        $isOpen === true &&\n        css`\n            visibility: visible;\n            opacity: 1;\n        `}\n`;\n\nexport const StyledSearchHeader = styled.div`\n    height: 55px;\n    background-color: #fff;\n    padding: 0 15px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    ${device.small} {\n        padding: 0 20px;\n        height: 60px;\n    }\n    ${device.large} {\n        padding: 0 25px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-bottom-width: 0;\n        `}\n`;\n\nexport const StyledSearchInput = styled(({ ...rest }) => <Input {...rest} />)`\n    padding: 0;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${themeGet(\"colors.text\")};\n    border-width: 0;\n    background-color: transparent;\n    &::placeholder {\n        font-weight: 400;\n        ${device.large} {\n            font-size: 16px;\n        }\n    }\n    &:-ms-input-placeholder {\n        font-weight: 400;\n        ${device.large} {\n            font-size: 16px;\n        }\n    }\n    &::-ms-input-placeholder {\n        font-weight: 400;\n        ${device.large} {\n            font-size: 16px;\n        }\n    }\n    ${device.large} {\n        font-size: 16px;\n    }\n    &:focus {\n        box-shadow: none;\n        color: ${themeGet(\"colors.text\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: #fff;\n            &::placeholder {\n                color: #fff;\n            }\n        `}\n`;\n\nexport const StyledSearchBtn = styled(({ ...rest }) => <Button {...rest} />)`\n    svg {\n        width: 20px;\n        height: 20px;\n        stroke-width: 2.8px;\n        margin-top: -2px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n\nexport const StyledSearchClose = styled(({ ...rest }) => <Button {...rest} />)`\n    color: ${themeGet(\"colors.text3\")};\n    margin-left: 5px;\n    &:hover {\n        color: ${themeGet(\"colors.text\")};\n    }\n    ${device.large} {\n        margin-left: 10px;\n    }\n`;\n\nexport const StyledSearchBody = styled.div`\n    padding: 15px 15px 20px;\n    background-color: #fff;\n    font-size: 13px;\n    ${device.large} {\n        padding: 25px 25px 30px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken2\")};\n            a {\n                color: ${themeGet(\"colors.gray500\")};\n                border-color: ${themeGet(\"colors.gray700\")};\n                &:hover,\n                &:focus {\n                    background-color: ${themeGet(\"colors.primary\")};\n                    color: #fff;\n                    border-color: transparent;\n                }\n            }\n        `}\n`;\n\nexport const StyledSearchTitle = styled.h6`\n    font-size: 10px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-weight: 500;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 10px;\n`;\n\nexport const StyledNavList = styled.ul`\n    padding-left: 0;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 0;\n    ${device.large} {\n        flex-direction: row;\n    }\n`;\n\nexport const StyledNavListItem = styled.li`\n    &:not(:first-of-type) {\n        margin-top: 2px;\n        ${device.large} {\n            margin-top: 0;\n            margin-left: 5px;\n        }\n    }\n`;\n\nexport const StyledNavBtn = styled.a`\n    padding: 5px 10px;\n    display: block;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    ${device.large} {\n        border: 1px solid ${themeGet(\"colors.border\")};\n    }\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.light\")};\n        ${device.large} {\n            background-color: ${themeGet(\"colors.text4\")};\n            border-color: transparent;\n        }\n    }\n`;\n\nexport const StyledNavDevider = styled.hr`\n    margin-top: 30px;\n    margin-bottom: 30px;\n    border-width: 0;\n    border-color: ${themeGet(\"colors.border\")};\n`;\n","import { Search, X } from \"react-feather\";\nimport { Input } from \"@doar/components\";\nimport {\n    StyledSearch,\n    StyledSearchHeader,\n    StyledSearchBtn,\n    StyledSearchClose,\n    StyledSearchBody,\n    StyledSearchTitle,\n    StyledNavList,\n    StyledNavBtn,\n    StyledNavDevider,\n    StyledNavListItem,\n} from \"./style\";\n\ninterface IProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nconst NavSearch = ({ isOpen, onClose }: IProps) => {\n    return (\n        <StyledSearch $isOpen={isOpen}>\n            <StyledSearchHeader>\n                <Input\n                    type=\"search\"\n                    id=\"nav-search\"\n                    name=\"nav-search\"\n                    placeholder=\"Type and hit enter to search...\"\n                    customStyle=\"noborder\"\n                    fontSize={[\"14px\", null, null, \"16px\"]}\n                />\n                <StyledSearchBtn variant=\"texted\" color=\"light\">\n                    <Search />\n                </StyledSearchBtn>\n                <StyledSearchClose variant=\"texted\" onClick={onClose}>\n                    <X />\n                </StyledSearchClose>\n            </StyledSearchHeader>\n            <StyledSearchBody>\n                <StyledSearchTitle>Recent Searches</StyledSearchTitle>\n                <StyledNavList>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">modern dashboard</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">calendar app</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">modal examples</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">avatar</StyledNavBtn>\n                    </StyledNavListItem>\n                </StyledNavList>\n                <StyledNavDevider />\n                <StyledSearchTitle>Search Suggestions</StyledSearchTitle>\n                <StyledNavList>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">cryptocurrency</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">button groups</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">form elements</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">contact app</StyledNavBtn>\n                    </StyledNavListItem>\n                </StyledNavList>\n            </StyledSearchBody>\n        </StyledSearch>\n    );\n};\n\nexport default NavSearch;\n","import styled, { device, themeGet, css } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledLogo = styled(({ ...rest }) => <Anchor {...rest} />)`\n    font-weight: 700;\n    font-size: 22px;\n    letter-spacing: -1px;\n    color: inherit;\n    display: flex;\n    align-items: center;\n    position: relative;\n    color: ${themeGet(\"colors.gulf\")};\n    margin-top: -4px;\n    span {\n        display: inline-block;\n        font-weight: 400;\n        color: ${themeGet(\"colors.primary\")};\n    }\n    ${device.small} {\n        font-size: 22px;\n    }\n    ${device.large} {\n        font-size: 24px;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n","import { StyledLogo } from \"./style\";\n\nconst Logo = () => {\n    return (\n        <StyledLogo path=\"/\">\n            do<span>ar</span>\n        </StyledLogo>\n    );\n};\n\nexport default Logo;\n","import styled, {\n    device,\n    themeGet,\n    layout,\n    space,\n    css,\n    tinycolor,\n} from \"@doar/shared/styled\";\nimport { Button } from \"@doar/components\";\n\nexport const StyledHeader = styled.header`\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    align-items: stretch;\n    height: 55px;\n    padding: 0;\n    justify-content: flex-start;\n    background-color: #fff;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    ${device.large} {\n        height: 60px;\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        z-index: 1000;\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            border-bottom-color: ${tinycolor(\n                themeGet(\"colors.skinUi01\")(props) as string\n            )\n                .lighten(45)\n                .toString()};\n            box-shadow: 0 0 25px\n                ${tinycolor(themeGet(\"colors.skinUi01\")(props) as string)\n                    .setAlpha(0.1)\n                    .toRgbString()};\n        `};\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-bottom-width: 0;\n        `};\n`;\n\nexport const StyledLogo = styled.div`\n    padding-top: 0.33594rem;\n    padding-bottom: 0.33594rem;\n    margin-right: 1rem;\n    font-size: 1.09375rem;\n    line-height: inherit;\n    white-space: nowrap;\n    display: flex;\n    align-items: center;\n    padding-left: 15px;\n    margin-right: 0;\n    order: 1;\n    ${device.large} {\n        width: 240px;\n        padding: 0 0 0 20px;\n    }\n`;\n\ninterface INavbar {\n    $isOpen?: boolean;\n}\n\nexport const StyledNavbarWrap = styled.div<INavbar>`\n    order: 3;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    z-index: 1060;\n    visibility: hidden;\n    opacity: 0;\n    transition: all 0.4s;\n    will-change: visibility, opacity;\n    background-color: ${(props) =>\n        props &&\n        css`\n            ${tinycolor(themeGet(\"colors.vulcan\")(props) as string)\n                .setAlpha(0.7)\n                .toRgbString()}\n        `};\n\n    ${({ $isOpen }) =>\n        $isOpen === true &&\n        css`\n            visibility: visible;\n            opacity: 1;\n        `}\n    ${device.xlarge} {\n        padding: 0 30px;\n    }\n    ${device.large} {\n        width: auto;\n        padding: 0 25px;\n        position: relative;\n        top: auto;\n        left: auto;\n        bottom: auto;\n        overflow: visible;\n        display: flex;\n        justify-content: center;\n        order: 2;\n        transform: none;\n        z-index: auto;\n        flex: 1;\n        visibility: visible;\n        opacity: 1;\n        background: transparent;\n    }\n`;\n\nexport const StyledNavbarMenu = styled.nav<INavbar>`\n    width: 260px;\n    height: 100%;\n    transition: all 0.4s;\n    will-change: transform;\n    transform: translateX(-260px);\n    z-index: 99999;\n    position: relative;\n    ${({ $isOpen }) =>\n        $isOpen === true &&\n        css`\n            transform: translateX(0);\n        `}\n    ${device.large} {\n        background-color: transparent;\n        width: 100%;\n        max-width: 780px;\n        margin-top: -3px;\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        flex-direction: row;\n        transform: translateX(0);\n    }\n    ${(props) =>\n        props.theme.name !== \"dark\" &&\n        css`\n            background-color: #fff;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darklighten5\")};\n            ${device.large} {\n                background-color: transparent;\n            }\n        `}\n`;\n\nexport const StyledNavbarHeader = styled.div`\n    height: 55px;\n    padding: 0 15px 0 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    ${device.large} {\n        display: none;\n    }\n    ${(props) =>\n        props.theme.name !== \"dark\" &&\n        css`\n            border-bottom: 1px solid ${themeGet(\"colors.border\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n\n            a:last-child {\n                &:hover,\n                &:focus {\n                    color: ${themeGet(\"colors.white\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledNavbarBody = styled.div`\n    padding: 25px 0;\n    ${device.large} {\n        padding: 0;\n        width: 100%;\n    }\n`;\n\nexport const StyledNavbarTitle = styled.h6`\n    font-size: 10px;\n    font-weight: 600;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    letter-spacing: 0.7px;\n    color: ${themeGet(\"colors.text3\")};\n    text-transform: uppercase;\n    display: block;\n    margin-bottom: 15px;\n    padding-left: 20px;\n    ${device.large} {\n        display: none;\n    }\n`;\n\nexport const StyleNavbarRight = styled.div`\n    padding: 0 15px;\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    order: 2;\n    ${device.xlarge} {\n        width: 240px;\n    }\n    ${device.large} {\n        order: 3;\n        padding: 0 20px 0 0;\n    }\n`;\n\nexport const StyledNavbarElement = styled(({ mt, mb, ml, mr, ...props }) => (\n    <div {...props} />\n))`\n    ${space};\n    ${layout};\n    .header-icon {\n        width: 16px;\n        height: 16px;\n        stroke-width: 3px;\n\n        ${device.small} {\n            width: 20px;\n            height: 20px;\n            stroke-width: 2.25px;\n        }\n        ${({ theme }) =>\n            theme.name !== \"dark\" &&\n            css`\n                color: ${themeGet(\"colors.text\")};\n            `}\n        ${({ theme }) =>\n            theme.name === \"dark\" &&\n            css`\n                color: ${themeGet(\"colors.gray300\")};\n                &:hover,\n                &:focus {\n                    color: ${themeGet(\"colors.white\")};\n                }\n            `}\n    }\n`;\n\ninterface IMenuBtn {\n    $hasSidebar?: boolean;\n    $sidebarOpen?: boolean;\n    $bodyOpen?: boolean;\n}\n\nexport const StyledMenuBtn = styled(({ ...rest }) => (\n    <Button {...rest} />\n))<IMenuBtn>`\n    margin-left: 18px;\n    svg {\n        color: ${themeGet(\"colors.text3\")};\n    }\n\n    ${({ $hasSidebar }) =>\n        $hasSidebar === true &&\n        css`\n            display: none;\n        `}\n\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen === true &&\n        !$bodyOpen &&\n        css`\n            ${device.mdToLg} {\n                display: block;\n            }\n        `}\n\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen === true &&\n        !$bodyOpen &&\n        css`\n            display: block;\n        `}\n\t${({ $bodyOpen, $sidebarOpen }) =>\n        $bodyOpen === true &&\n        $sidebarOpen === true &&\n        css`\n            display: none;\n        `}\n\t${device.large} {\n        display: none;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            &:hover {\n                color: ${themeGet(\"colors.white\")};\n            }\n        `}\n`;\n\nexport const StyledSidebarBtn = styled(({ ...rest }) => (\n    <Button {...rest} />\n))<IMenuBtn>`\n    margin-left: 18px;\n    svg {\n        color: ${themeGet(\"colors.text3\")};\n    }\n    ${device.small} {\n        margin-left: 20px;\n    }\n    ${device.large} {\n        display: none;\n    }\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen === true &&\n        !$bodyOpen &&\n        css`\n            ${device.mdToLg} {\n                display: none;\n            }\n        `}\n\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen === true &&\n        !$bodyOpen &&\n        css`\n            display: none;\n        `}\n    ${({ $bodyOpen, $sidebarOpen }) =>\n        $bodyOpen === true &&\n        $sidebarOpen === true &&\n        css`\n            display: block;\n        `}\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            &:hover {\n                color: ${themeGet(\"colors.white\")};\n            }\n        `}\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Search, Menu, X, ArrowLeft } from \"react-feather\";\nimport { Navbar, Button } from \"@doar/components\";\nimport { menuData } from \"@doar/shared/data\";\nimport MessageDropdown from \"../../components/header/message-dropdown\";\nimport NotificationDropdown from \"../../components/header/notification-dropdown\";\nimport ProfileDropdown from \"../../components/header/profile-dropdown\";\nimport NavSearch from \"../../components/header/nav-search\";\nimport Logo from \"../../components/logo\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { toggleSidebar, toggleBody } from \"../../redux/slices/ui\";\nimport {\n    StyledHeader,\n    StyledLogo,\n    StyledNavbarWrap,\n    StyledNavbarMenu,\n    StyleNavbarRight,\n    StyledNavbarElement,\n    StyledNavbarHeader,\n    StyledNavbarBody,\n    StyledNavbarTitle,\n    StyledMenuBtn,\n    StyledSidebarBtn,\n} from \"./style\";\n\ninterface IProps {\n    hasSidebar?: boolean;\n    sidebarLayout?: 1 | 2;\n}\n\nconst Header = ({ hasSidebar, sidebarLayout }: IProps) => {\n    const dispatch = useAppDispatch();\n    const { sidebar, isBody } = useAppSelector((state) => state.ui);\n    const [searchOpen, setSearchOpen] = useState(false);\n    const searchHandler = useCallback(() => {\n        setSearchOpen((prev) => !prev);\n    }, []);\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const sidebarHandler = useCallback(\n        (_: any, isOpen?: \"open\") => {\n            dispatch(toggleSidebar({ isOpen }));\n        },\n        [dispatch]\n    );\n\n    const bodyHandler = useCallback(() => {\n        dispatch(toggleBody());\n        dispatch(toggleSidebar({ isOpen: \"open\" }));\n    }, [dispatch]);\n\n    const menuHandler = useCallback(() => {\n        setMenuOpen((prev) => !prev);\n        if (menuOpen) {\n            sidebarHandler(undefined, \"open\");\n        }\n    }, [menuOpen, sidebarHandler]);\n\n    useEffect(() => {\n        return () => {\n            sidebarHandler(undefined, \"open\");\n            bodyHandler();\n        };\n    }, [sidebarHandler, bodyHandler]);\n\n    return (\n        <>\n            <StyledHeader>\n                {hasSidebar && sidebarLayout === 1 && (\n                    <>\n                        <StyledMenuBtn\n                            variant=\"texted\"\n                            onClick={menuHandler}\n                            $hasSidebar={hasSidebar}\n                            $sidebarOpen={sidebar}\n                            $bodyOpen={isBody}\n                            className=\"menu-btn\"\n                        >\n                            <Menu size={20} strokeWidth=\"2.5px\" />\n                        </StyledMenuBtn>\n                        <StyledSidebarBtn\n                            variant=\"texted\"\n                            onClick={!isBody ? sidebarHandler : bodyHandler}\n                            $sidebarOpen={sidebar}\n                            $bodyOpen={isBody}\n                            className=\"sidebar-btn\"\n                        >\n                            <ArrowLeft size={20} strokeWidth=\"2.5px\" />\n                        </StyledSidebarBtn>\n                    </>\n                )}\n                {hasSidebar && sidebarLayout === 2 && (\n                    <>\n                        <StyledMenuBtn\n                            variant=\"texted\"\n                            onClick={menuHandler}\n                            $hasSidebar={hasSidebar}\n                            $sidebarOpen={!sidebar}\n                            $bodyOpen={false}\n                        >\n                            <Menu size={20} strokeWidth=\"2.5px\" />\n                        </StyledMenuBtn>\n                        <StyledSidebarBtn\n                            variant=\"texted\"\n                            onClick={sidebarHandler}\n                            $sidebarOpen={!sidebar}\n                            $bodyOpen={false}\n                        >\n                            <ArrowLeft size={20} strokeWidth=\"2.5px\" />\n                        </StyledSidebarBtn>\n                    </>\n                )}\n                {!hasSidebar && (\n                    <StyledMenuBtn\n                        variant=\"texted\"\n                        onClick={menuHandler}\n                        $hasSidebar={hasSidebar}\n                        $sidebarOpen={!sidebar}\n                    >\n                        <Menu size={20} strokeWidth=\"2.5px\" />\n                    </StyledMenuBtn>\n                )}\n                <StyledLogo>\n                    <Logo />\n                </StyledLogo>\n                <StyledNavbarWrap\n                    $isOpen={menuOpen}\n                    onClick={menuHandler}\n                    className=\"navbar-wrap\"\n                >\n                    <StyledNavbarMenu\n                        $isOpen={menuOpen}\n                        onClick={(e) => e.stopPropagation()}\n                    >\n                        <StyledNavbarHeader>\n                            <Logo />\n                            <Button variant=\"texted\" onClick={menuHandler}>\n                                <X\n                                    color=\"#7987a1\"\n                                    width={20}\n                                    strokeWidth=\"2.5px\"\n                                />\n                            </Button>\n                        </StyledNavbarHeader>\n                        <StyledNavbarBody>\n                            <StyledNavbarTitle>\n                                MAIN NAVIGATION\n                            </StyledNavbarTitle>\n                            <Navbar menus={menuData} />\n                        </StyledNavbarBody>\n                    </StyledNavbarMenu>\n                </StyledNavbarWrap>\n                <StyleNavbarRight>\n                    <StyledNavbarElement>\n                        <Button\n                            variant=\"texted\"\n                            onClick={searchHandler}\n                            className=\"search-btn\"\n                        >\n                            <Search className=\"header-icon\" />\n                        </Button>\n                    </StyledNavbarElement>\n                    <StyledNavbarElement ml={[\"8px\", \"15px\"]}>\n                        <MessageDropdown />\n                    </StyledNavbarElement>\n                    <StyledNavbarElement ml={[\"8px\", \"15px\"]}>\n                        <NotificationDropdown />\n                    </StyledNavbarElement>\n                    <StyledNavbarElement ml={[\"15px\", \"20px\", \"30px\"]}>\n                        <ProfileDropdown />\n                    </StyledNavbarElement>\n                </StyleNavbarRight>\n            </StyledHeader>\n            <NavSearch isOpen={searchOpen} onClose={searchHandler} />\n        </>\n    );\n};\n\nHeader.defaultProps = {\n    sidebarLayout: 1,\n};\n\nexport default Header;\n","/* eslint-disable react/react-in-jsx-scope */\nimport styled, { themeGet, device, tinycolor, css } from \"@doar/shared\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledFooter = styled.footer`\n    font-size: 10px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    letter-spacing: 0.3px;\n    padding: 15px 25px;\n    background-color: ${themeGet(\"colors.gray50\")};\n    color: ${themeGet(\"colors.gray950\")};\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    text-transform: uppercase;\n    ${device.large} {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-direction: row-reverse;\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            border-top-color: transparent;\n            box-shadow: 0 0 25px\n                ${tinycolor(themeGet(\"colors.skinUi01\")(props) as string)\n                    .setAlpha(0.1)\n                    .toRgbString()};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-top-width: 0;\n\n            a {\n                color: ${themeGet(\"colors.gray500\")};\n                &:hover,\n                &:focus {\n                    color: #fff;\n                }\n            }\n        `}\n`;\n\nexport const StyledFooterLeft = styled.div`\n    margin-top: 10px;\n    ${device.medium} {\n        margin-top: 0;\n    }\n    a {\n        padding: 0;\n        color: ${themeGet(\"colors.text2\")};\n    }\n    .copright-link {\n        display: inline-flex;\n        a {\n            margin-left: 2px;\n        }\n    }\n    svg {\n        width: 16px;\n        height: 16px;\n        color: ${themeGet(\"colors.danger\")};\n        margin: 0 5px;\n    }\n`;\n\nexport const StyledFooterRight = styled.div``;\n\nexport const StyledFooterNav = styled.nav`\n    display: flex;\n    flex-wrap: wrap;\n    padding-left: 0;\n    margin-bottom: 0;\n    list-style: none;\n`;\n\nexport const StyledFotterNavLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))`\n    padding: 0;\n    color: ${themeGet(\"colors.text2\")};\n    display: block;\n    &:not(:first-of-type) {\n        margin-left: 25px;\n    }\n    &:hover {\n        color: ${themeGet(\"colors.primary\")};\n    }\n`;\n","import { Heart } from \"react-feather\";\nimport {\n    StyledFooter,\n    StyledFooterLeft,\n    StyledFooterRight,\n    StyledFooterNav,\n    StyledFotterNavLink,\n} from \"./style\";\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            <StyledFooterRight>\n                <StyledFooterNav>\n                    <StyledFotterNavLink path=\"https://themeforest.net/licenses/standard\">\n                        Licenses\n                    </StyledFotterNavLink>\n                    <StyledFotterNavLink path=\"/\">\n                        Change Log\n                    </StyledFotterNavLink>\n                    <StyledFotterNavLink path=\"https://hasthemes.com/contact-us/\">\n                        Get Help\n                    </StyledFotterNavLink>\n                </StyledFooterNav>\n            </StyledFooterRight>\n            <StyledFooterLeft>\n                <span>&copy; Doar {new Date().getFullYear()} </span>\n                <span className=\"copright-link\">\n                    MADE WITH <Heart size=\"24\" /> BY{\"  \"}\n                    <a\n                        href=\"https://themeforest.net/user/bootxperts/portfolio\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        BootXperts\n                    </a>\n                </span>\n            </StyledFooterLeft>\n        </StyledFooter>\n    );\n};\n\nexport default Footer;\n","import Header from \"./header\";\nimport Footer from \"./footer\";\n\ninterface IProps {\n    children: React.ReactNode;\n    hasSidebar?: boolean;\n    hideFooter?: boolean;\n    sidebarLayout?: 1 | 2;\n    layout?: \"app\";\n}\n\nconst Layout = ({\n    children,\n    hasSidebar,\n    hideFooter,\n    sidebarLayout,\n}: IProps) => {\n    return (\n        <>\n            <Header hasSidebar={hasSidebar} sidebarLayout={sidebarLayout} />\n            {children}\n            {!hideFooter && <Footer />}\n        </>\n    );\n};\n\nLayout.defaultProps = {\n    hideFooter: false,\n};\n\nexport default Layout;\n"],"names":["SEO","title","titleTemplate","description","charSet","name","content","defaultProps","StyledMediaBody","styled","rest","StyledStrong","themeGet","props","theme","css","StyledText","tinycolor","colors","text","setAlpha","toRgbString","StyledSpan","size","shape","status","StyledDropMenu","device","displayName","StyledDropHeader","StyledDropItem","hexTorgb","light","lighten","toString","StyledDropFooter","darken","StyledBadge","direction","variant","className","path","to","StyledAvatar","StyledAuthorName","StyledAuthorRole","mt","space","StyledDivider","StyledSearch","vulcan","$isOpen","StyledSearchHeader","StyledSearchBtn","StyledSearchClose","StyledSearchBody","StyledSearchTitle","StyledNavList","StyledNavListItem","StyledNavBtn","StyledNavDevider","isOpen","onClose","type","id","placeholder","customStyle","fontSize","color","onClick","href","StyledLogo","StyledHeader","StyledNavbarWrap","StyledNavbarMenu","StyledNavbarHeader","StyledNavbarBody","StyledNavbarTitle","StyleNavbarRight","StyledNavbarElement","mb","ml","mr","layout","StyledMenuBtn","$hasSidebar","$sidebarOpen","$bodyOpen","StyledSidebarBtn","Header","hasSidebar","sidebarLayout","dispatch","useAppDispatch","useAppSelector","state","ui","sidebar","isBody","useState","searchOpen","setSearchOpen","searchHandler","useCallback","prev","menuOpen","setMenuOpen","sidebarHandler","_","toggleSidebar","bodyHandler","toggleBody","menuHandler","undefined","useEffect","strokeWidth","e","stopPropagation","width","menus","menuData","StyledFooter","StyledFooterLeft","StyledFooterRight","StyledFooterNav","StyledFotterNavLink","Date","getFullYear","target","rel","Layout","children","hideFooter"],"sourceRoot":""}