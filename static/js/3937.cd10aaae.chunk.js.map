{"version":3,"file":"static/js/3937.cd10aaae.chunk.js","mappings":"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","sources":["components/apps/chat/label/style.tsx","components/apps/chat/label/index.tsx","components/apps/chat/modal-invite-people/style.tsx","components/apps/chat/modal-invite-people/index.tsx","components/apps/chat/channel-nav/style.tsx","components/apps/chat/channel-nav/index.tsx","components/apps/chat/direct-nav/style.tsx","components/apps/chat/direct-nav/index.tsx","components/apps/chat/search-form/style.tsx","components/apps/chat/search-form/index.tsx","components/apps/chat/settings-nav/style.tsx","components/apps/chat/settings-nav/index.tsx","components/apps/chat/chat-group/style.tsx","components/apps/chat/chat-group/divider.tsx","components/apps/chat/chat-group/item.tsx","components/apps/chat/chat-group/index.tsx","components/apps/chat/chat-form/style.tsx","components/apps/chat/chat-form/index.tsx","components/apps/chat/member-list/style.tsx","components/apps/chat/member-list/item.tsx","components/apps/chat/member-list/index.tsx","components/apps/chat/direct-title/style.tsx","components/apps/chat/direct-title/index.tsx","containers/apps/chat/main/style.tsx","containers/apps/chat/main/index.tsx","containers/apps/chat/nav-left/style.tsx","containers/apps/chat/nav-left/index.tsx","containers/apps/chat/sidebar/style.tsx","components/apps/chat/sidebar-header/style.tsx","components/apps/chat/sidebar-header/index.tsx","components/apps/chat/modal-create-channel/style.tsx","components/apps/chat/modal-create-channel/index.tsx","components/apps/chat/sidebar-channels/style.tsx","components/apps/chat/sidebar-channels/index.tsx","components/apps/chat/sidebar-messages/style.tsx","components/apps/chat/sidebar-messages/item.tsx","components/apps/chat/sidebar-messages/index.tsx","components/apps/chat/sidebar-footer/style.tsx","components/apps/chat/sidebar-footer/index.tsx","containers/apps/chat/sidebar/index.tsx","containers/apps/chat/wrapper/style.tsx","containers/apps/chat/wrapper/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/heading-has-content */\nimport styled, { space, SpaceProps, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledLabel = styled(({ mb, pl, ...rest }) => (\n    <h6 {...rest} />\n))<SpaceProps>`\n    font-size: 10px;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    font-weight: 500;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 0;\n    ${space}\n`;\n","import { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledLabel } from \"./style\";\n\ntype IProps = SpaceProps & {\n    children: React.ReactNode;\n};\n\nconst Label = ({ children, ...rest }: IProps) => {\n    return <StyledLabel {...rest}>{children}</StyledLabel>;\n};\n\nexport default Label;\n","import styled, { device, themeGet } from \"@doar/shared/styled\";\nimport { ModalClose, ModalFooter, Modal } from \"@doar/components\";\n\nexport const StyledModal = styled(({ ...rest }) => <Modal {...rest} />)`\n    .form-control {\n        background-color: transparent;\n        color: ${themeGet(\"colors.gray300\")};\n        border-color: ${themeGet(\"colors.gray700\")};\n    }\n    .input-group .btn {\n        border-color: ${themeGet(\"colors.gray700\")};\n    }\n`;\n\nexport const StyledClose = styled(({ ...rest }) => <ModalClose {...rest} />)`\n    position: absolute;\n    top: 20px;\n    right: 20px;\n`;\n\nexport const StyledTitle = styled.h6`\n    margin-bottom: 5px;\n    font-size: 18px;\n    ${device.small} {\n        font-size: 20px;\n    }\n`;\n\nexport const StyledFooter = styled(({ ...rest }) => <ModalFooter {...rest} />)`\n    padding-bottom: 20px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 0px;\n    border-top: 0;\n`;\n\nexport const StyledText = styled.p`\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 20px;\n`;\n","import { X } from \"react-feather\";\nimport {\n    ModalBody,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Button,\n} from \"@doar/components\";\nimport { StyledModal, StyledClose, StyledTitle, StyledText } from \"./style\";\n\ninterface IProps {\n    show: boolean;\n    onClose: () => void;\n}\n\nconst ModalInvitePeople = ({ show, onClose }: IProps) => {\n    return (\n        <StyledModal show={show} onClose={onClose}>\n            <ModalBody p={[\"20px\", \"30px\"]}>\n                <StyledClose onClose={onClose}>\n                    <X size={20} />\n                </StyledClose>\n                <StyledTitle>Invite People</StyledTitle>\n                <StyledText>\n                    Share this link to your friend to grant access and join to\n                    this channel\n                </StyledText>\n                <InputGroup mb=\"5px\">\n                    <Input\n                        type=\"text\"\n                        name=\"create-channel\"\n                        id=\"create-channel\"\n                        placeholder=\"https://www.example.com\"\n                        readonly\n                    />\n                    <InputGroupAddon>\n                        <Button variant=\"outlined\" color=\"light\">\n                            Copy\n                        </Button>\n                    </InputGroupAddon>\n                </InputGroup>\n            </ModalBody>\n        </StyledModal>\n    );\n};\n\nexport default ModalInvitePeople;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nconst linkCss = css<ILinkProps>`\n    color: ${themeGet(\"colors.text3\")};\n    padding: 2px;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    &:not(:first-of-type) {\n        margin-left: 2px;\n    }\n    ${device.small} {\n        padding: 2px 5px;\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.text2\")};\n        `}\n    span {\n        margin-left: 5px;\n        font-weight: 500;\n    }\n    svg {\n        width: 20px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n        `}\n`;\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    ${linkCss};\n`;\n\nexport const StyledButton = styled(({ ...rest }) => (\n    <button type=\"button\" {...rest} />\n))<ILinkProps>`\n    border: none;\n    background: transparent;\n    ${linkCss};\n`;\n","import { useState } from \"react\";\nimport { UserPlus, Users } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport ModalInvitePeople from \"../modal-invite-people\";\nimport { useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleSidebar } from \"../../../../redux/slices/chat-ui\";\nimport { StyledNav, StyledButton } from \"./style\";\n\nconst ChannelNav = () => {\n    const dispatch = useAppDispatch();\n    const [show, setShow] = useState(false);\n    const handleModal = () => {\n        setShow((prev) => !prev);\n    };\n    const handleSidebar = () => {\n        dispatch(toggleSidebar());\n    };\n\n    return (\n        <>\n            <StyledNav>\n                <StyledButton\n                    onClick={handleModal}\n                    data-tip=\"Invite People\"\n                    data-for=\"tooltip-invite\"\n                >\n                    <UserPlus />\n                </StyledButton>\n                <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-invite\" />\n                <StyledButton\n                    $active\n                    onClick={handleSidebar}\n                    data-tip=\"Member List\"\n                    data-for=\"tooltip-mlist\"\n                >\n                    <Users />\n                    <span>25</span>\n                </StyledButton>\n                <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-mlist\" />\n            </StyledNav>\n            <ModalInvitePeople show={show} onClose={handleModal} />\n        </>\n    );\n};\n\nexport default ChannelNav;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    color: ${themeGet(\"colors.text3\")};\n    padding: 2px;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    &:not(:first-of-type) {\n        margin-left: 2px;\n    }\n    ${device.small} {\n        padding: 2px 5px;\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.text2\")};\n        `}\n    span {\n        margin-left: 5px;\n        font-weight: 500;\n    }\n    svg {\n        width: 20px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n        `}\n`;\n","import { Phone, Info, Flag, Star } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { StyledNav, StyledLink } from \"./style\";\n\nconst DirectNav = () => {\n    return (\n        <StyledNav>\n            <StyledLink\n                path=\"#!\"\n                data-for=\"tooltip-phone\"\n                data-tip=\"Phone Calls\"\n            >\n                <Phone />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-phone\" />\n            <StyledLink\n                path=\"#!\"\n                data-for=\"tooltip-details\"\n                data-tip=\"User details\"\n            >\n                <Info />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-details\" />\n            <StyledLink\n                path=\"#!\"\n                data-for=\"tooltip-fav\"\n                data-tip=\"Add to favourites\"\n            >\n                <Star />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-fav\" />\n            <StyledLink path=\"#!\" data-for=\"tooltip-flag\" data-tip=\"Flag User\">\n                <Flag />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-flag\" />\n        </StyledNav>\n    );\n};\n\nexport default DirectNav;\n","import styled, { themeGet, device, css } from \"@doar/shared/styled\";\nimport { Input, Button } from \"@doar/components\";\n\nexport const StyledForm = styled.form`\n    display: none;\n    ${device.small} {\n        margin-right: 10px;\n        flex: 1;\n        display: flex;\n        align-items: center;\n        margin-left: 15px;\n        height: 34px;\n    }\n    input {\n        &:hover,\n        &:focus,\n        &:active {\n            box-shadow: none;\n            border-color: ${themeGet(\"colors.primary\")};\n            & + button {\n                border-color: ${themeGet(\"colors.primary\")};\n            }\n            ${(props) =>\n                props.theme.name === \"dark\" &&\n                css`\n                    border-color: ${themeGet(\"colors.gray800\")};\n                    & + button {\n                        border-color: ${themeGet(\"colors.gray800\")};\n                    }\n                `}\n        }\n    }\n`;\n\nexport const StyledInput = styled(({ ...rest }) => <Input {...rest} />)`\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right-width: 0;\n    font-size: inherit;\n    width: 150px;\n    height: 100%;\n    min-height: 0;\n    background-color: transparent;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: rgba(255, 255, 255, 0.08);\n        `}\n`;\n\nexport const StyledButton = styled(({ ...rest }) => <Button {...rest} />)`\n    display: flex;\n    align-items: center;\n    border: 1px solid ${themeGet(\"colors.text4\")};\n    border-left-width: 0;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    color: ${themeGet(\"colors.text3\")};\n    min-height: 0;\n    padding: 0 10px;\n    height: 100%;\n    svg {\n        width: 18px;\n        height: 18px;\n        stroke-width: 2.5px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: rgba(255, 255, 255, 0.08);\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { Search } from \"react-feather\";\nimport { StyledForm, StyledInput, StyledButton } from \"./style\";\n\nconst SearchForm = () => {\n    return (\n        <StyledForm>\n            <StyledInput\n                id=\"chat-search\"\n                name=\"chat-search\"\n                placeholder=\"Search\"\n            />\n            <StyledButton type=\"submit\" variant=\"texted\">\n                <Search />\n            </StyledButton>\n        </StyledForm>\n    );\n};\n\nexport default SearchForm;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    color: ${themeGet(\"colors.text3\")};\n    padding: 2px;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    &:not(:first-of-type) {\n        margin-left: 2px;\n    }\n    ${device.small} {\n        padding: 2px 5px;\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.text2\")};\n        `}\n    span {\n        margin-left: 5px;\n        font-weight: 500;\n    }\n    svg {\n        width: 20px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n        `}\n`;\n","import { MoreVertical } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { StyledNav, StyledLink } from \"./style\";\n\nconst SettingsNav = () => {\n    return (\n        <StyledNav>\n            <StyledLink path=\"#!\" data-tip=\"Channel Settings\">\n                <MoreVertical />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" />\n        </StyledNav>\n    );\n};\n\nexport default SettingsNav;\n","import styled, { themeGet, css } from \"@doar/shared/styled\";\nimport { MediaBody } from \"@doar/components\";\n\nexport const StyledGroup = styled.div`\n    min-height: 100%;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    .media {\n        & + .media {\n            margin-top: 20px;\n        }\n    }\n`;\n\nexport const StyledDivider = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    margin: 20px 0;\n    color: ${themeGet(\"colors.text3\")};\n    font-size: 10px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    &:first-of-type {\n        margin-top: 0;\n    }\n    &:before,\n    &:after {\n        content: \"\";\n        display: block;\n        flex: 1;\n        height: 1px;\n        background-color: ${themeGet(\"colors.light\")};\n    }\n    &:before {\n        margin-right: 10px;\n    }\n    &:after {\n        margin-left: 10px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            &::before,\n            &::after {\n                background-color: rgba(255, 255, 255, 0.06);\n            }\n        `}\n`;\n\nexport const StyledItemBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n    margin-left: 20px;\n    h6 {\n        font-size: 14px;\n        font-weight: 600;\n        small {\n            color: ${themeGet(\"colors.text3\")};\n        }\n    }\n    p {\n        margin-bottom: 5px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray700\")};\n        `}\n`;\n","import { StyledDivider } from \"./style\";\n\nconst Divider = ({ children }: { children: React.ReactNode }) => {\n    return <StyledDivider>{children}</StyledDivider>;\n};\n\nexport default Divider;\n","/* eslint-disable react/no-danger */\nimport { Media, Avatar, AvatarInitial } from \"@doar/components\";\nimport { StyledItemBody } from \"./style\";\n\ninterface IProps {\n    status: \"online\" | \"offline\";\n    image?: string;\n    bg?: string;\n    name: string;\n    time: string;\n    content: string;\n}\n\nconst Item = ({ status, image, bg, name, time, content }: IProps) => {\n    return (\n        <Media>\n            <Avatar size=\"sm\" status={status}>\n                {image && <img src={image} alt={name} />}\n                {!image && (\n                    <AvatarInitial bg={bg}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n            </Avatar>\n            <StyledItemBody>\n                <h6>\n                    {name} <small>{time}</small>\n                </h6>\n                <div dangerouslySetInnerHTML={{ __html: content }} />\n            </StyledItemBody>\n        </Media>\n    );\n};\n\nItem.defaultProps = {\n    bg: \"dark\",\n};\n\nexport default Item;\n","import Divider from \"./divider\";\nimport Item from \"./item\";\nimport { StyledGroup } from \"./style\";\n\nconst ChatGroup = () => {\n    return (\n        <StyledGroup>\n            <Divider>February 20, 2019</Divider>\n            <Item\n                status=\"online\"\n                name=\"katherine\"\n                time=\"Today at 1:30am\"\n                content=\"<p>Hello everyone, this is my first message to this channel</p><p>anybody here?</p>\"\n            />\n            <Divider>February 21, 2019</Divider>\n            <Item\n                status=\"online\"\n                name=\"katherine\"\n                time=\"Yesterday at 4:10am\"\n                content=\"<p>I'm back once again!!</p><p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.</p><p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.</p>\"\n            />\n            <Item\n                status=\"offline\"\n                name=\"situmay\"\n                time=\"Yesterday at 4:15am\"\n                content=\"<p>Excepteur sint occaecat cupidatat non proident</p><p>Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse...</p>\"\n            />\n            <Divider>February 22, 2019</Divider>\n            <Item\n                status=\"online\"\n                bg=\"gray600\"\n                name=\"rlabares\"\n                time=\"Yesterday at 4:10am\"\n                content=\"<p>Nam libero tempore, cum soluta nobis</p>\"\n            />\n            <Item\n                status=\"offline\"\n                name=\"situmay\"\n                time=\"today at 4:15am\"\n                content=\"<p>I'm back once again!!</p><p>Et harum quidem rerum facilis est et expedita distinctio.</p><p>Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus.</p>\"\n            />\n        </StyledGroup>\n    );\n};\n\nexport default ChatGroup;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Input } from \"@doar/components\";\n\nexport const StyledForm = styled.form`\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const StyldFile = styled.label`\n    width: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${themeGet(\"colors.text3\")};\n    border-right: 1px solid ${themeGet(\"colors.border\")};\n    cursor: pointer;\n    &:hover,\n    &:focus {\n        color: ${themeGet(\"colors.text2\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n\nexport const StyledInput = styled(({ ...rest }) => <Input {...rest} />)`\n    font-size: inherit;\n    border: 0;\n    box-shadow: none !important;\n    background-color: transparent;\n    align-self: center;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray300\")};\n            &:placeholder {\n                color: ${themeGet(\"colors.gray800\")};\n            }\n        `}\n`;\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n    border-left: 1px solid ${themeGet(\"colors.border\")};\n    padding: 10px 20px;\n    svg {\n        width: 20px;\n        color: ${themeGet(\"colors.text3\")};\n        &:hover {\n            color: ${themeGet(\"colors.cornflower\")};\n        }\n    }\n`;\n\nexport const StyledImage = styled.label`\n    padding: 2px 5px;\n    border-radius: 0.25rem;\n    cursor: pointer;\n    line-height: 1;\n`;\n\nexport const StyledBtn = styled.button`\n    padding: 2px 5px;\n    border-radius: 0.25rem;\n    cursor: pointer;\n    background: transparent;\n    border: none;\n    margin-left: 2px;\n    line-height: 1;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { Plus, Image, Gift, Smile } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport {\n    StyledForm,\n    StyldFile,\n    StyledInput,\n    StyledNav,\n    StyledImage,\n    StyledBtn,\n} from \"./style\";\n\nconst ChatForm = () => {\n    return (\n        <StyledForm>\n            <>\n                <StyldFile\n                    htmlFor=\"add-file\"\n                    data-tip=\"Add File\"\n                    data-for=\"tooltip-gif\"\n                >\n                    <Plus />\n                </StyldFile>\n                <input type=\"file\" id=\"add-file\" name=\"add-file\" hidden />\n                <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-gif\" />\n            </>\n\n            <StyledInput\n                type=\"text\"\n                id=\"message\"\n                name=\"message\"\n                placeholder=\"Message\"\n            />\n            <StyledNav>\n                <>\n                    <StyledImage\n                        htmlFor=\"add-image\"\n                        data-tip=\"Add Gif\"\n                        data-for=\"tooltip-gif\"\n                    >\n                        <Image />\n                    </StyledImage>\n                    <input type=\"file\" id=\"add-image\" name=\"add-image\" hidden />\n                    <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-gif\" />\n                </>\n                <StyledBtn data-for=\"tooltip-gift\" data-tip=\"Add Gift\">\n                    <Gift />\n                </StyledBtn>\n                <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-gift\" />\n                <StyledBtn data-for=\"tooltip-smily\" data-tip=\"Add Smiley\">\n                    <Smile />\n                </StyledBtn>\n                <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-smily\" />\n            </StyledNav>\n        </StyledForm>\n    );\n};\n\nexport default ChatForm;\n","import styled, { themeGet, css } from \"@doar/shared/styled\";\nimport { Media } from \"@doar/components\";\n\nexport const StyledWrap = styled.div`\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const StyledList = styled.div`\n    margin-top: 10px;\n`;\n\nexport const StyledItem = styled(({ ...rest }) => <Media {...rest} />)`\n    padding: 6px 10px;\n    align-items: center;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    cursor: pointer;\n    &:not(:first-of-type) {\n        margin-top: 2px;\n    }\n    &:focus,\n    &:hover {\n        background-color: ${themeGet(\"colors.whisper\")};\n        ${(props) =>\n            props.theme.name === \"dark\" &&\n            css`\n                background-color: ${themeGet(\"colors.darklighten5\")};\n            `}\n    }\n`;\n","import { Avatar, AvatarInitial, MediaBody, Heading } from \"@doar/components\";\nimport { StyledItem } from \"./style\";\n\ninterface IProps {\n    status: \"online\" | \"offline\";\n    image?: string;\n    bg?: string;\n    name: string;\n}\n\nconst Item = ({ status, image, bg, name }: IProps) => {\n    return (\n        <StyledItem>\n            <Avatar size=\"sm\" status={status}>\n                {image && <img src={image} alt={name} />}\n                {!image && (\n                    <AvatarInitial bg={bg}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n            </Avatar>\n            <MediaBody ml=\"10px\">\n                <Heading mb=\"0px\">{name}</Heading>\n            </MediaBody>\n        </StyledItem>\n    );\n};\n\nItem.defaultProps = {\n    bg: \"dark\",\n};\n\nexport default Item;\n","import Label from \"../label\";\nimport Item from \"./item\";\nimport { StyledWrap, StyledList } from \"./style\";\n\nconst MemberList = () => {\n    return (\n        <StyledWrap>\n            <Label pl=\"10px\">Members List</Label>\n            <StyledList>\n                <Item status=\"online\" bg=\"gray500\" name=\"dfbot\" />\n                <Item status=\"online\" bg=\"primary\" name=\"situmay\" />\n                <Item status=\"offline\" bg=\"secondary\" name=\"acantones\" />\n                <Item status=\"offline\" bg=\"success\" name=\"rlabares\" />\n                <Item status=\"online\" bg=\"teal\" name=\"h.owen\" />\n                <Item status=\"online\" bg=\"info\" name=\"k.billie\" />\n                <Item status=\"online\" bg=\"indigo\" name=\"m.audrey\" />\n                <Item status=\"online\" bg=\"gray500\" name=\"macasindil\" />\n                <Item status=\"online\" bg=\"gray600\" name=\"e.ocaba\" />\n                <Item status=\"online\" bg=\"gray800\" name=\"avendula\" />\n            </StyledList>\n        </StyledWrap>\n    );\n};\n\nexport default MemberList;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledName = styled.h6`\n    margin-left: 10px;\n    margin-bottom: 0px;\n`;\n","import { Avatar, AvatarInitial } from \"@doar/components\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport { StyledWrap, StyledName } from \"./style\";\n\nconst DirectTitle = () => {\n    const { person } = useAppSelector((state) => state.chatUI);\n    return (\n        <StyledWrap>\n            <Avatar size=\"sm\">\n                {person?.image && (\n                    <img src={person?.image} alt={person?.name} />\n                )}\n                <AvatarInitial bg={person?.bg}>\n                    {person?.name.substring(0, 1)}\n                </AvatarInitial>\n            </Avatar>\n            <StyledName>@{person?.name}</StyledName>\n        </StyledWrap>\n    );\n};\n\nexport default DirectTitle;\n","import styled, { device, css, themeGet, tinycolor } from \"@doar/shared/styled\";\n\ninterface IMainProps {\n    $sidebar?: boolean;\n    $layout?: 1 | 2;\n}\n\nexport const StyledMain = styled.div<IMainProps>`\n    position: absolute;\n    inset: 0;\n    visibility: hidden;\n    opacity: 0;\n    transform: translateX(100vw);\n    transition: all 0.3s;\n    ${({ $layout }) =>\n        $layout === 1 &&\n        css`\n            ${device.small} {\n                transform: translateX(310px);\n            }\n            ${device.large} {\n                left: 310px;\n            }\n        `}\n    ${({ $layout }) =>\n        $layout === 2 &&\n        css`\n            ${device.small} {\n                transform: translateX(304px);\n            }\n            ${device.large} {\n                left: 304px;\n            }\n        `}\n\n    ${device.large} {\n        opacity: 1;\n        transform: none;\n        visibility: visible;\n    }\n    ${({ $sidebar }) =>\n        $sidebar &&\n        css`\n            @media (max-width: 991.98px) {\n                opacity: 1;\n                visibility: visible;\n                transform: translateX(0);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n`;\n\nexport const StyledHeader = styled.div`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 15px 10px 20px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\n\nexport const StyledHeaderRight = styled.div`\n    display: flex;\n`;\n\nexport const StyledBody = styled.div<{ $showSidebar?: boolean }>`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 60px;\n    bottom: 60px;\n    ${({ $showSidebar }) =>\n        !!$showSidebar &&\n        css`\n            ${device.medium} {\n                margin-right: 230px;\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n        `}\n`;\n\nexport const StyledBodyInner = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const StyledFooter = styled.div`\n    background-color: #fff;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    height: 60px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(3)\n                .toString()};\n        `}\n`;\n\nexport const StyledSidebar = styled.div<{ $showSidebar?: boolean }>`\n    background-color: #fff;\n    width: 230px;\n    position: absolute;\n    top: 60px;\n    bottom: 60px;\n    right: 0;\n    display: none;\n    border-left: 1px solid ${themeGet(\"colors.border\")};\n    ${({ $showSidebar }) =>\n        !!$showSidebar &&\n        css`\n            display: block;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(\n                themeGet(\"colors.gray900\")(props) as string\n            )\n                .darken(3)\n                .toString()};\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n        `}\n`;\n","import { useEffect } from \"react\";\nimport { Heading } from \"@doar/components\";\nimport ScrollBar from \"../../../../components/scrollbar\";\nimport ChannelNav from \"../../../../components/apps/chat/channel-nav\";\nimport DirectNav from \"../../../../components/apps/chat/direct-nav\";\nimport SearchForm from \"../../../../components/apps/chat/search-form\";\nimport SettingsNav from \"../../../../components/apps/chat/settings-nav\";\nimport ChatGroup from \"../../../../components/apps/chat/chat-group\";\nimport ChatForm from \"../../../../components/apps/chat/chat-form\";\nimport MemberList from \"../../../../components/apps/chat/member-list\";\nimport DirectTitle from \"../../../../components/apps/chat/direct-title\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleSidebar } from \"../../../../redux/slices/chat-ui\";\nimport {\n    StyledMain,\n    StyledHeader,\n    StyledHeaderRight,\n    StyledBody,\n    StyledBodyInner,\n    StyledFooter,\n    StyledSidebar,\n} from \"./style\";\n\ninterface IProps {\n    layout?: 1 | 2;\n}\n\nconst Main = ({ layout }: IProps) => {\n    const dispatch = useAppDispatch();\n    const { channel, chatType, rightSidebar } = useAppSelector(\n        (state) => state.chatUI\n    );\n    const { sidebar } = useAppSelector((state) => state.ui);\n\n    useEffect(() => {\n        if (window.matchMedia(\"(max-width: 991px)\").matches) {\n            dispatch(toggleSidebar());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <StyledMain className=\"content\" $layout={layout} $sidebar={sidebar}>\n            <StyledHeader>\n                {chatType === \"channel\" && (\n                    <Heading mb=\"0px\">#{channel}</Heading>\n                )}\n                {chatType === \"direct\" && <DirectTitle />}\n                <StyledHeaderRight>\n                    {chatType === \"channel\" && <ChannelNav />}\n                    {chatType === \"direct\" && <DirectNav />}\n                    <SearchForm />\n                    <SettingsNav />\n                </StyledHeaderRight>\n            </StyledHeader>\n            <StyledBody $showSidebar={rightSidebar}>\n                <ScrollBar>\n                    <StyledBodyInner>\n                        <ChatGroup />\n                    </StyledBodyInner>\n                </ScrollBar>\n            </StyledBody>\n            <StyledFooter>\n                <ChatForm />\n            </StyledFooter>\n            <StyledSidebar $showSidebar={rightSidebar}>\n                <ScrollBar>\n                    <MemberList />\n                </ScrollBar>\n            </StyledSidebar>\n        </StyledMain>\n    );\n};\n\nMain.defaultProps = {\n    layout: 1,\n};\n\nexport default Main;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\ninterface INavProps {\n    $sidebar?: boolean;\n    $layout?: 1 | 2;\n}\n\nexport const StyledNavLeft = styled.div<INavProps>`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    border-right: 1px solid ${themeGet(\"colors.border\")};\n    padding: 15px 10px;\n    transition: all 0.3s;\n    ${({ $layout }) =>\n        $layout === 1 &&\n        css`\n            width: 60px;\n        `}\n    ${({ $layout }) =>\n        $layout === 2 &&\n        css`\n            width: 54px;\n        `}\n    ${({ $sidebar }) =>\n        $sidebar &&\n        css`\n            @media (max-width: 991px) {\n                transform: translateX(-100vw);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\n\nexport const StyledNav = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledNavLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    padding: 0;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    transition: all 0.2s ease-in-out;\n    &:not(:first-of-type) {\n        margin-top: 10px;\n    }\n    svg {\n        width: 20px;\n        height: 20px;\n        fill: rgba(27, 46, 75, 0.1);\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n            svg {\n                fill: rgba(1, 104, 250, 0.2);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !props.$active &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { Users, MessageSquare, Phone, AtSign, HelpCircle } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport { StyledNavLeft, StyledNav, StyledNavLink } from \"./style\";\n\ninterface IProps {\n    layout?: 1 | 2;\n}\n\nconst NavLeft = ({ layout }: IProps) => {\n    const { sidebar } = useAppSelector((state) => state.ui);\n    return (\n        <StyledNavLeft className=\"nav-left\" $layout={layout} $sidebar={sidebar}>\n            <StyledNav>\n                <StyledNavLink path=\"#!\" data-tip=\"Contacts\">\n                    <Users />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" $active data-tip=\"Messages\">\n                    <MessageSquare />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" data-tip=\"Phone Calls\">\n                    <Phone />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" data-tip=\"Mentions\">\n                    <AtSign />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" data-tip=\"Help\">\n                    <HelpCircle />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n            </StyledNav>\n        </StyledNavLeft>\n    );\n};\n\nNavLeft.defaultProps = {\n    layout: 1,\n};\n\nexport default NavLeft;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\n\ninterface INavProps {\n    $sidebar?: boolean;\n    $layout?: 1 | 2;\n}\n\nexport const StyledSidebar = styled.div<INavProps>`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    transition: all 0.3s;\n    ${({ $layout }) =>\n        $layout === 1 &&\n        css`\n            left: 60px;\n        `}\n    ${({ $layout }) =>\n        $layout === 2 &&\n        css`\n            left: 54px;\n        `}\n    @media (min-width: 480px) {\n        width: 250px;\n        border-right: 1px solid ${themeGet(\"colors.border\")};\n    }\n    ${({ $sidebar }) =>\n        $sidebar &&\n        css`\n            @media (max-width: 991px) {\n                transform: translateX(-100vw);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n`;\n\nexport const StyledHeader = styled.div`\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    height: 60px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\nexport const StyledBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n`;\nexport const StyledFooter = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 60px;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    padding-left: 20px;\n    padding-right: 15px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Dropdown } from \"@doar/components\";\n\nexport const StyledWrap = styled(({ ...rest }) => <Dropdown {...rest} />)`\n    .dropdown {\n        &-toggle {\n            height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            padding-left: 20px;\n            padding-right: 15px;\n            position: relative;\n            z-index: 5;\n            width: 100%;\n        }\n        &-menu {\n            box-shadow: none;\n            width: 100%;\n            max-width: 255px;\n            border-width: 0 0 1px 1px;\n            border-color: ${themeGet(\"colors.border\")};\n            padding: 10px;\n            margin: 60px -5px 0 -1px;\n            border-radius: 0;\n            transform: none !important;\n            &:before {\n                content: \"\";\n                position: absolute;\n                top: -10px;\n                right: 15px;\n                border-bottom: 10px solid rgba(192, 204, 218, 0.53);\n                border-left: 10px solid transparent;\n                border-right: 10px solid transparent;\n            }\n            &:after {\n                content: \"\";\n                position: absolute;\n                top: -8.5px;\n                right: 16px;\n                border-bottom: 9px solid #fff;\n                border-left: 9px solid transparent;\n                border-right: 9px solid transparent;\n            }\n            @media (min-width: 480px) {\n                border-width: 0 0 1px;\n                width: 100%;\n                max-width: none;\n                margin: 0;\n            }\n        }\n        &-item {\n            display: flex;\n            align-items: center;\n            padding: 4px 10px;\n            border-radius: 0.25rem;\n            svg {\n                width: 16px;\n                margin-right: 10px;\n            }\n        }\n        &-divider {\n            margin: 5px 10px;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .dropdown {\n                &-toggle {\n                    & > span {\n                        color: ${themeGet(\"colors.gray800\")};\n                    }\n                    &:hover,\n                    &:focus {\n                        > span {\n                            color: ${themeGet(\"colors.gray300\")};\n                        }\n                    }\n                }\n                &-menu {\n                    background-color: ${themeGet(\"colors.darkdarken2\")};\n\n                    &::before {\n                        border-bottom-color: rgba(255, 255, 255, 0.08);\n                    }\n                    &::after {\n                        border-bottom-color: ${themeGet(\"colors.darkdarken2\")};\n                    }\n                }\n                &-item {\n                    color: ${themeGet(\"colors.gray500\")};\n                    &:hover,\n                    &:focus {\n                        color: #fff;\n                        background-color: ${themeGet(\"colors.darklighten2\")};\n                    }\n                }\n            }\n        `}\n`;\n\nStyledWrap.displayName = \"Dropdown\";\n\nexport const StyledMedia = styled.div`\n    display: flex;\n    align-items: center;\n`;\n","import {\n    ChevronDown,\n    UserPlus,\n    PlusSquare,\n    Server,\n    Bell,\n    Zap,\n    Edit3,\n    ShieldOff,\n} from \"react-feather\";\nimport {\n    Avatar,\n    AvatarInitial,\n    Text,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    DropdownDivider,\n} from \"@doar/components\";\nimport { StyledWrap, StyledMedia } from \"./style\";\n\nconst SidebarHeader = () => {\n    return (\n        <StyledWrap direction=\"down\">\n            <DropdownToggle variant=\"texted\" className=\"dropdown-toggle\">\n                <StyledMedia>\n                    <Avatar size=\"sm\" mr=\"8px\">\n                        <AvatarInitial>T</AvatarInitial>\n                    </Avatar>\n                    <Text as=\"span\" color=\"text\" fontWeight={600}>\n                        TeamName\n                    </Text>\n                </StyledMedia>\n                <Text as=\"span\" color=\"text3\" lineHeight={1}>\n                    <ChevronDown size={18} />\n                </Text>\n            </DropdownToggle>\n            <DropdownMenu>\n                <DropdownItem path=\"#!\">\n                    <UserPlus /> Invite People\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <PlusSquare /> Create Channel\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <Server /> Server Settings\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <Bell /> Notification Settings\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <Zap /> Privacy Settings\n                </DropdownItem>\n                <DropdownDivider />\n                <DropdownItem path=\"#!\">\n                    <Edit3 /> Edit Team Details\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <ShieldOff /> Hide Muted Channels\n                </DropdownItem>\n            </DropdownMenu>\n        </StyledWrap>\n    );\n};\n\nexport default SidebarHeader;\n","import styled from \"@doar/shared/styled\";\nimport { ModalClose, ModalFooter } from \"@doar/components\";\n\nexport const StyledClose = styled(({ ...rest }) => <ModalClose {...rest} />)`\n    font-weight: 300;\n    font-size: 28px;\n    line-height: 0.87;\n    position: absolute;\n    top: 15px;\n    right: 15px;\n`;\n\nexport const StyledTitle = styled.h6`\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-weight: 600;\n    margin-bottom: 20px;\n`;\n\nexport const StyledFooter = styled(({ ...rest }) => <ModalFooter {...rest} />)`\n    padding-bottom: 20px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 0px;\n    border-top: 0;\n`;\n","import { X } from \"react-feather\";\nimport { Modal, ModalBody, Input, Button } from \"@doar/components\";\nimport { StyledClose, StyledTitle, StyledFooter } from \"./style\";\n\ninterface IProps {\n    show: boolean;\n    onClose: () => void;\n}\n\nconst ModalCreateChannel = ({ show, onClose }: IProps) => {\n    return (\n        <Modal show={show} onClose={onClose} size=\"sm\">\n            <ModalBody p=\"20px\">\n                <StyledClose onClose={onClose}>\n                    <X size={20} />\n                </StyledClose>\n                <StyledTitle>Create Channel</StyledTitle>\n                <Input\n                    type=\"text\"\n                    name=\"create-channel\"\n                    id=\"create-channel\"\n                    placeholder=\"Channel name\"\n                />\n            </ModalBody>\n            <StyledFooter>\n                <Button color=\"secondary\" fontSize=\"13px\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button fontSize=\"13px\">Create</Button>\n            </StyledFooter>\n        </Modal>\n    );\n};\n\nexport default ModalCreateChannel;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    flex: 1 1 auto;\n`;\n\nexport const StyledHeader = styled.div`\n    padding-left: 10px;\n    padding-right: 10px;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledBtn = styled.button`\n    color: ${themeGet(\"colors.text3\")};\n    background: transparent;\n    padding: 0;\n    border: none;\n`;\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    margin-bottom: 20px;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <button type=\"button\" {...rest} />\n))<ILinkProps>`\n    display: flex;\n    align-items: center;\n    position: relative;\n    padding: 5px 10px;\n    font-weight: 500;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    background-color: transparent;\n    border: none;\n    &:not(:first-of-type) {\n        margin-top: 2px;\n    }\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.whisper\")};\n    }\n    ${device.large} {\n        ${({ $active }) =>\n            !!$active &&\n            css`\n                color: ${themeGet(\"colors.primary\")};\n                background-color: ${themeGet(\"colors.catskill\")};\n            `}\n        ${(props) =>\n            props.theme.name === \"dark\" &&\n            !!props.$active &&\n            css`\n                background-color: ${themeGet(\"colors.darklighten2\")};\n            `}\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                background-color: ${themeGet(\"colors.gray900\")};\n                color: #fff;\n            }\n        `}\n`;\n","import { useState, useEffect, MouseEvent } from \"react\";\nimport { PlusCircle } from \"react-feather\";\nimport { Badge } from \"@doar/components\";\nimport Label from \"../label\";\nimport ModalCreateChannel from \"../modal-create-channel\";\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\nimport { toggleChannel } from \"../../../../redux/slices/chat-ui\";\nimport { toggleSidebar } from \"../../../../redux/slices/ui\";\nimport {\n    StyledWrap,\n    StyledHeader,\n    StyledBtn,\n    StyledNav,\n    StyledLink,\n} from \"./style\";\n\nconst SidebarChannels = () => {\n    const dispatch = useAppDispatch();\n    const { chatType } = useAppSelector((state) => state.chatUI);\n    const [show, setShow] = useState(false);\n    const [activeId, setActiveId] = useState(\"\");\n    const handleModal = () => {\n        setShow((prev) => !prev);\n    };\n    useEffect(() => {\n        dispatch(toggleChannel({ channel: \"general\" }));\n        setActiveId(\"channel-1\");\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const handleClick = (e: MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLElement;\n        const { channel } = target.dataset;\n        setActiveId(target.id);\n        dispatch(toggleSidebar({ isOpen: undefined }));\n        if (!channel) return;\n        dispatch(toggleChannel({ channel }));\n    };\n\n    return (\n        <>\n            <StyledWrap>\n                <StyledHeader>\n                    <Label>All Channels</Label>\n                    <StyledBtn onClick={handleModal}>\n                        <PlusCircle size={14} />\n                    </StyledBtn>\n                </StyledHeader>\n                <StyledNav>\n                    <StyledLink\n                        id=\"channel-1\"\n                        path=\"#!\"\n                        $active={\n                            activeId === \"channel-1\" && chatType === \"channel\"\n                        }\n                        onClick={handleClick}\n                        data-channel=\"general\"\n                    >\n                        # general\n                    </StyledLink>\n                    <StyledLink\n                        id=\"channel-2\"\n                        path=\"#!\"\n                        $active={\n                            activeId === \"channel-2\" && chatType === \"channel\"\n                        }\n                        onClick={handleClick}\n                        data-channel=\"engineering\"\n                    >\n                        # engineering\n                    </StyledLink>\n                    <StyledLink\n                        id=\"channel-3\"\n                        path=\"#!\"\n                        $active={\n                            activeId === \"channel-3\" && chatType === \"channel\"\n                        }\n                        onClick={handleClick}\n                        data-channel=\"products\"\n                    >\n                        # products\n                        <Badge color=\"danger\" shape=\"circle\" ml=\"auto\">\n                            2\n                        </Badge>\n                    </StyledLink>\n                </StyledNav>\n            </StyledWrap>\n            <ModalCreateChannel show={show} onClose={handleModal} />\n        </>\n    );\n};\n\nexport default SidebarChannels;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Media } from \"@doar/components\";\n\nexport const StyledWrap = styled.div`\n    padding-top: 20px;\n    padding-bottom: 20px;\n    padding-left: 10px;\n    padding-right: 10px;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    flex: 1 1 auto;\n`;\n\nexport const StyledList = styled.div``;\n\ninterface IProps {\n    $active: boolean;\n}\n\nexport const StyledItem = styled(({ ...rest }) => <Media {...rest} />)<IProps>`\n    padding: 8px 10px;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    cursor: pointer;\n    align-items: center;\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.whisper\")};\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            background-color: ${themeGet(\"colors.light\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n            &:hover {\n                background-color: ${themeGet(\"colors.gray900\")};\n                .avatar:after {\n                    box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n                }\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            .avatar::after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n        `}\n`;\n","import { MouseEvent } from \"react\";\nimport {\n    Avatar,\n    AvatarInitial,\n    MediaBody,\n    Heading,\n    Text,\n    Badge,\n} from \"@doar/components\";\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\nimport { togglePerson } from \"../../../../redux/slices/chat-ui\";\nimport { toggleSidebar } from \"../../../../redux/slices/ui\";\nimport { StyledItem } from \"./style\";\n\ninterface IProps {\n    id: string;\n    status: \"online\" | \"offline\";\n    image?: string;\n    bg?: string;\n    name: string;\n    lastMsgTime: string;\n    unseenMsg?: number;\n    activeId: string;\n    onClick: (e: MouseEvent<HTMLDivElement>) => void;\n}\n\nconst Item = ({\n    id,\n    status,\n    bg,\n    image,\n    name,\n    lastMsgTime,\n    unseenMsg,\n    activeId,\n    onClick,\n}: IProps) => {\n    const dispatch = useAppDispatch();\n    const { chatType } = useAppSelector((state) => state.chatUI);\n\n    const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n        onClick(e);\n        dispatch(toggleSidebar({ isOpen: undefined }));\n        dispatch(togglePerson({ person: { image, bg, status, name } }));\n    };\n    return (\n        <StyledItem\n            id={id}\n            $active={activeId === id && chatType === \"direct\"}\n            onClick={handleClick}\n        >\n            <Avatar size=\"sm\" status={status}>\n                {image && <img src={image} alt={name} />}\n                {!image && (\n                    <AvatarInitial bg={bg}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n            </Avatar>\n            <MediaBody ml=\"10px\">\n                <Heading mb=\"0px\">{name}</Heading>\n                <Text as=\"small\" display=\"block\" color=\"text4\">\n                    {lastMsgTime}\n                </Text>\n            </MediaBody>\n            {unseenMsg && (\n                <Badge color=\"danger\" shape=\"circle\">\n                    {unseenMsg}\n                </Badge>\n            )}\n        </StyledItem>\n    );\n};\n\nItem.defaultProps = {\n    bg: \"dark\",\n};\n\nexport default Item;\n","import { useState, MouseEvent } from \"react\";\nimport Label from \"../label\";\nimport Item from \"./item\";\nimport { StyledWrap, StyledList } from \"./style\";\n\nconst SidebarMessages = () => {\n    const [activeId, setActiveId] = useState(\"\");\n    const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n        const target = e.target as HTMLElement;\n        let targetId = activeId;\n        if (!target.classList.contains(\"media\")) {\n            const id = target.closest(\".media\")?.id;\n            targetId = id || activeId;\n        } else {\n            targetId = target.id || activeId;\n        }\n        setActiveId(targetId);\n    };\n\n    return (\n        <StyledWrap>\n            <Label mb=\"10px\" pl=\"10px\">\n                Direct Messages\n            </Label>\n            <StyledList>\n                <Item\n                    id=\"message-1\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    name=\"dfbot\"\n                    lastMsgTime=\"5 mins ago\"\n                />\n                <Item\n                    id=\"message-2\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"gray700\"\n                    name=\"situmay\"\n                    lastMsgTime=\"1 hour ago\"\n                />\n                <Item\n                    id=\"message-3\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"offline\"\n                    name=\"situmay\"\n                    bg=\"gray600\"\n                    lastMsgTime=\"1 hour ago\"\n                    unseenMsg={3}\n                />\n                <Item\n                    id=\"message-4\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"offline\"\n                    bg=\"primary\"\n                    name=\"acantones\"\n                    lastMsgTime=\"2 hours ago\"\n                />\n                <Item\n                    id=\"message-5\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"offline\"\n                    bg=\"secondary\"\n                    name=\"rlabares\"\n                    lastMsgTime=\"2 hours ago\"\n                />\n                <Item\n                    id=\"message-6\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"success\"\n                    name=\"h.owen\"\n                    lastMsgTime=\"3 hours ago\"\n                />\n                <Item\n                    id=\"message-7\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"info\"\n                    name=\"k.billie\"\n                    lastMsgTime=\"3 hours ago\"\n                />\n                <Item\n                    id=\"message-8\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"teal\"\n                    name=\"m.audrey\"\n                    lastMsgTime=\"3 hours ago\"\n                />\n                <Item\n                    id=\"message-9\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"indigo\"\n                    name=\"macasindil\"\n                    lastMsgTime=\"4 hours ago\"\n                />\n                <Item\n                    id=\"message-10\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"pink\"\n                    name=\"e.ocaba\"\n                    lastMsgTime=\"4 hours ago\"\n                />\n                <Item\n                    id=\"message-11\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"cyan\"\n                    name=\"avendula\"\n                    lastMsgTime=\"5 hours ago\"\n                />\n            </StyledList>\n        </StyledWrap>\n    );\n};\n\nexport default SidebarMessages;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledWrap = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledLinks = styled.div`\n    align-items: center;\n    display: flex;\n`;\n\nexport const StyledLink = styled(({ ...rest }) => <Anchor {...rest} />)`\n    padding: 3px 6px;\n    color: ${themeGet(\"colors.text3\")};\n    border-radius: 0.25rem;\n    line-height: 1;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { Mic, Settings } from \"react-feather\";\nimport { Avatar, AvatarInitial, Heading } from \"@doar/components\";\nimport { StyledWrap, StyledLinks, StyledLink } from \"./style\";\n\nconst SidebarFooter = () => {\n    return (\n        <>\n            <StyledWrap>\n                <Avatar size=\"sm\" status=\"online\">\n                    <AvatarInitial bg=\"dark\">d</AvatarInitial>\n                </Avatar>\n                <Heading fontWeight={600} mb=\"0px\" ml=\"8px\">\n                    Katherine\n                </Heading>\n            </StyledWrap>\n            <StyledLinks>\n                <StyledLink path=\"#!\">\n                    <Mic size={18} />\n                </StyledLink>\n                <StyledLink path=\"#!\">\n                    <Settings size={18} />\n                </StyledLink>\n            </StyledLinks>\n        </>\n    );\n};\n\nexport default SidebarFooter;\n","import { StyledSidebar, StyledHeader, StyledBody, StyledFooter } from \"./style\";\nimport Scrollbar from \"../../../../components/scrollbar\";\nimport SidebarHeader from \"../../../../components/apps/chat/sidebar-header\";\nimport SidebarChannels from \"../../../../components/apps/chat/sidebar-channels\";\nimport SidebarMessages from \"../../../../components/apps/chat/sidebar-messages\";\nimport SidebarFooter from \"../../../../components/apps/chat/sidebar-footer\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\n\ninterface IProps {\n    layout?: 1 | 2;\n}\n\nconst Sidebar = ({ layout }: IProps) => {\n    const { sidebar } = useAppSelector((state) => state.ui);\n    return (\n        <StyledSidebar className=\"sidebar\" $layout={layout} $sidebar={sidebar}>\n            <StyledHeader>\n                <SidebarHeader />\n            </StyledHeader>\n            <Scrollbar bottom=\"60px\">\n                <StyledBody>\n                    <SidebarChannels />\n                    <SidebarMessages />\n                </StyledBody>\n            </Scrollbar>\n            <StyledFooter>\n                <SidebarFooter />\n            </StyledFooter>\n        </StyledSidebar>\n    );\n};\n\nSidebar.defaultProps = {\n    layout: 1,\n};\n\nexport default Sidebar;\n","import styled, { device, themeGet, css } from \"@doar/shared/styled\";\n\ninterface IProps {\n    $layout?: 1 | 2;\n}\n\nexport const StyledWrapper = styled.div<IProps>`\n    background-color: ${themeGet(\"colors.lilac\")};\n    top: 55px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    ${device.large} {\n        top: 60px;\n    }\n    ${({ $layout }) =>\n        $layout === 1 &&\n        css`\n            position: fixed;\n        `}\n    ${({ $layout }) =>\n        $layout === 2 &&\n        css`\n            position: fixed;\n            ${device.large} {\n                position: static;\n                height: 100%;\n            }\n        `}\n`;\n","import { StyledWrapper } from \"./style\";\n\ninterface IProps {\n    layout?: 1 | 2;\n    children: React.ReactNode;\n}\n\nconst Wrapper = ({ children, layout }: IProps) => {\n    return (\n        <StyledWrapper $layout={layout} className=\"wrapper\">\n            {children}\n        </StyledWrapper>\n    );\n};\n\nWrapper.defaultProps = {\n    layout: 1,\n};\n\nexport default Wrapper;\n"],"names":["StyledLabel","styled","mb","pl","rest","themeGet","space","children","StyledModal","StyledClose","StyledTitle","device","StyledText","show","onClose","p","size","type","name","id","placeholder","readonly","variant","color","StyledNav","linkCss","css","$active","props","theme","StyledButton","dispatch","useAppDispatch","useState","setShow","handleModal","prev","onClick","place","effect","toggleSidebar","StyledLink","path","StyledForm","StyledInput","StyledGroup","StyledDivider","StyledItemBody","Item","status","image","bg","time","content","src","alt","substring","dangerouslySetInnerHTML","__html","defaultProps","StyldFile","StyledImage","StyledBtn","htmlFor","hidden","StyledWrap","StyledList","StyledItem","ml","StyledName","person","useAppSelector","state","chatUI","StyledMain","$layout","$sidebar","StyledHeader","StyledHeaderRight","StyledBody","$showSidebar","StyledBodyInner","StyledFooter","tinycolor","darken","toString","StyledSidebar","Main","layout","channel","chatType","rightSidebar","sidebar","ui","useEffect","window","matchMedia","matches","className","StyledNavLeft","StyledNavLink","NavLeft","displayName","StyledMedia","direction","mr","as","fontWeight","lineHeight","Z","fontSize","activeId","setActiveId","toggleChannel","handleClick","e","preventDefault","target","dataset","isOpen","undefined","shape","lastMsgTime","unseenMsg","togglePerson","display","targetId","classList","contains","closest","StyledLinks","Sidebar","bottom","StyledWrapper","Wrapper"],"sourceRoot":""}